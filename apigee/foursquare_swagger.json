{
    "swagger": "2.0",
    "info": {
        "version": "",
        "title": "Foursquare",
        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        }
    },
    "host": "api.foursquare.com",
    "basePath": "/v2/",
    "securityDefinitions": {},
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/{USER_ID}": {
            "get": {
                "description": "Returns profile information for a given user, including selected badges and mayorships. If the user is a friend, contact information, Facebook ID, and Twitter handle and the user's last checkin may also be present.In addition, the pings field will indicate whether checkins from this user will trigger a ping (notifications to mobile devices). This setting can be changed via setpings. Note that this setting is overriden if pings is false in settings (no pings will be sent, even if this user is set to true).",
                "operationId": "getUser_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get details for. Pass self to get details of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/leaderboard": {
            "get": {
                "description": "Returns the user's leaderboard.",
                "operationId": "getLeaderboard_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "neighbors",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Number of friends' scores to return that are adjacent to your score, in ranked order. The current user's score is returned as well. An odd number of neighbors returns one more user ahead of the current user than behind. If the current user is at the top of the leaderboard, only the neighbors behind the current user are returned. If the current user is at the bottom of the leaderboard, only the neighbors ahead of the current user are returned. If neighbors is not specified, scores for all your friends are returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/requests": {
            "get": {
                "description": "Shows a user the list of users with whom they have a pending friend request (i.e., someone tried to add the acting user as a friend, but the acting user has not accepted).",
                "operationId": "getRequests_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "description": "Helps a user locate friends. Returns an array of compact user objects with Twitter or Facebook information and friend status.",
                "operationId": "searchUserGet_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Helps a user locate friends. Returns an array of compact user objects with Twitter or Facebook information and friend status.",
                "operationId": "Create_searchUserPost_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/badges": {
            "get": {
                "description": "Returns badges for a given user.",
                "operationId": "getBadges_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID for user to view badges for. Pass self to get details of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/checkins": {
            "get": {
                "description": "Returns a history of checkins for the authenticated user.",
                "operationId": "getUserCheckins_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get details for. Pass self to get details of the acting user. For now, only \"self\" is supported"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Number of results to return, up to 250."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The number of results to skip. Used to page through results."
                    },
                    {
                        "name": "afterTimestamp",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Retrieve the first results to follow these seconds since epoch. This should be useful for paging forward in time, or when polling for changes. To avoid missing results when polling, we recommend subtracting several seconds from the last poll time and then de-duplicating."
                    },
                    {
                        "name": "beforeTimestamp",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Retrieve the first results prior to these seconds since epoch. Useful for paging backward in time."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/friends": {
            "get": {
                "description": "Returns an array of a user's friends.",
                "operationId": "getFriends_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get friends of. Pass self to get friends of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/lists": {
            "get": {
                "description": "Return a User's Lists.",
                "operationId": "getLists_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get lists for. Pass self to get lists of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "created",
                            "edited",
                            "followed",
                            "friends",
                            "suggested"
                        ],
                        "type": "integer",
                        "description": "Can be created (lists created by this user), edited (other people's lists this user has edited), followed (lists this user follows), friends (lists from this user's friends), and suggested (lists relevant to the user's current location)."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Location of the user, required in order to receive the suggested group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/mayorships": {
            "get": {
                "description": "Returns a user's mayorships.",
                "operationId": "getMayorship_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get mayorships for. Pass self to get friends of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/photos": {
            "get": {
                "description": "Returns photos from a user.",
                "operationId": "getPhotos_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get details for. Pass self to get details of the acting user. For now, only \"self\" is supported"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/tips": {
            "get": {
                "description": "This endpoint is deprecated. Use /lists/USER_ID/tips instead. Returns tips from a user.",
                "operationId": "getUserTips_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get tips from. Pass self to get tips of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "recent",
                            "nearby",
                            "popular"
                        ],
                        "type": "integer",
                        "description": "One of recent, nearby, or popular. Nearby requires geolat and geolong to be provided."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/todos": {
            "get": {
                "description": "This endpoint is deprecated. Use /lists/USER_ID/todos instead. Returns todos from a user.",
                "operationId": "getTodos_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get todos for. Pass self to get todos of the acting user."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/venuehistory": {
            "get": {
                "description": "Returns a list of all venues visited by the specified user, along with how many visits and when they were last there.",
                "operationId": "getVenueHistory_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to get details for. Pass self to get details of the acting user. For now, only \"self\" is supported"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "beforeTimestamp",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Seconds since epoch."
                    },
                    {
                        "name": "afterTimestamp",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Seconds after epoch."
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Limits returned venues to those in this category. If specifying a top-level category, all sub-categories will also match the query."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/approve": {
            "post": {
                "description": "Approves a pending friend request from another user.",
                "operationId": "Create_approveFriend_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The user ID of a pending friend."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/deny": {
            "post": {
                "description": "Denies a pending friend request from another user.",
                "operationId": "Create_denyFriend_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The user ID of a pending friend."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/request": {
            "post": {
                "description": "Sends a friend request to another user. If the other user is a page then the requesting user will automatically start following the page.",
                "operationId": "Create_sendRequest_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The user ID to which a request will be sent."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/setpings": {
            "post": {
                "description": "Changes whether the acting user will receive pings (phone notifications) when the specified user checks in.",
                "operationId": "Create_setPings_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The user ID of a friend."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "The value to set: true or false."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{USER_ID}/unfriend": {
            "post": {
                "description": "Cancels any relationship between the acting user and the specified user. Removes a friend, unfollows a celebrity, or cancels a pending friend request.",
                "operationId": "Create_unfriendUser_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "USER_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the user to unfriend."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/self/update": {
            "post": {
                "description": "Updates the user's profile photo. Note: Photo under 100KB in multipart MIME encoding with content type image/jpeg, image/gif, or image/png.",
                "operationId": "updateUser_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "image/jpeg",
                            "image/gif",
                            "image/png"
                        ],
                        "default": "image/jpeg",
                        "type": "integer",
                        "description": "Content type."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "photo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Photo under 100KB in multipart MIME encoding with content type image/jpeg, image/gif, or image/png."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}": {
            "get": {
                "description": "Gives details about a venue, including location, mayorship, tags, tips, specials, and category. Authenticated users will also receive information about who is here now. If the venue ID given is one that has been merged into another \"master\" venue, the response will show data about the \"master\" instead of giving you an error.",
                "operationId": "getVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of venue to retrieve."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/add": {
            "post": {
                "description": "Allows users to add a new venue. If this method returns an error, give the user the option to edit her inputs. The method may return an HTTP 409 error if the new venue looks like a duplicate of an existing venue. This response will include two useful values: candidateDuplicateVenues and ignoreDuplicatesKey. In this situation we recommend you try these two options: 1) use one of the candidateDuplicateVenues included in the response of the 409 error, or 2) ignore duplicates and force the addition of a new venue by resubmitting the same venue add request with two additional parameters: ignoreDuplicates set to true and ignoreDuplicatesKey set to the value from the earlier error response. In addition to this, give users the ability to say \"never mind, check-in here anyway\" and perform a manual (\"venueless\") checkin by specifying just the venue name. All fields are optional, but one of either a valid address or a geolat/geolong pair must be provided. We recommend that developers provide a geolat/geolong pair in every case. Caller may also, optionally, pass in a category (primarycategoryid) to which you want this venue assigned. You can browse a full list of categories using the /categories method. On adding venue, we recommend that applications show the user this hierarchy and allow them to choose something suitable.",
                "operationId": "addVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the venue."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the venue, as accurate as is known."
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The address of the venue."
                    },
                    {
                        "name": "crossStreet",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The nearest intersecting street or streets."
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The city name where this venue is."
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The nearest state or province to the venue."
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The zip or postal code for the venue."
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The phone number of the venue."
                    },
                    {
                        "name": "twitter",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The twitter handle of the venue."
                    },
                    {
                        "name": "primaryCategoryId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the category to which you want to assign this venue."
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A freeform description of the venue, up to 300 characters."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The url of the homepage of the venue."
                    },
                    {
                        "name": "ignoreDuplicates",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "A boolean flag telling the server to ignore duplicates and force the addition of this venue."
                    },
                    {
                        "name": "ignoreDuplicatesKey",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Required if ignoreDuplicates is true. This key will be available in the response of the HTTP 409 error of the first (failed) attempt to add venue."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/categories": {
            "get": {
                "description": "Returns a hierarchical list of categories applied to venues. When designing client applications, please download this list only once per session, but also avoid caching this data for longer than a week to avoid stale information.",
                "operationId": "getCategories_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/explore": {
            "get": {
                "description": "Returns a list of recommended venues near the current location. If authenticated, the method will potentially personalize the ranking based on you and your friends. If you do not authenticate, you will not get this personalization. This is an experimental API. We're excited to share it, but it's a very new feature that is in flux, and we're also still learning if this is the right approach. Please give it a shot and provide feedback on the mailing list.",
                "operationId": "listRecommendedVenues_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location, so response can include distance."
                    },
                    {
                        "name": "llAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of latitude and longitude, in meters."
                    },
                    {
                        "name": "alt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Altitude of the user's location, in meters."
                    },
                    {
                        "name": "altAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of the user's altitude, in meters."
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Radius to search within, in meters. If radius is not specified, a suggested radius will be used depending on the density of venues in the area."
                    },
                    {
                        "name": "section",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "food",
                            "drinks",
                            "coffee",
                            "shops",
                            "arts",
                            "outdoors"
                        ],
                        "type": "integer",
                        "description": "One of food, drinks, coffee, shops, arts, or outdoors. Choosing one of these limits results to venues with categories matching these terms."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A search term to be applied against tips, category, tips, etc. at a venue."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 50."
                    },
                    {
                        "name": "intent",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Limit results to venues with specials."
                    },
                    {
                        "name": "novelty",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "new",
                            "old"
                        ],
                        "type": "integer",
                        "description": "Pass new or old to limit results to places the acting user hasn't been or has been, respectively. Omitting this parameter returns a mixture."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/managed": {
            "get": {
                "description": "Get a list of venues the current user manages.",
                "operationId": "listVenuesOfCurrentUser_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/search": {
            "get": {
                "description": "Returns a list of venues near the current location, optionally matching the search term. If lat and long is provided, each venue includes a distance. If authenticated, the method will return venue metadata related to you and your friends. If you do not authenticate, you will not get this data. Note that most of the fields returned inside venue can be optional. The user may create a venue that has no address, city or state (the venue is created instead at the geolat/geolong specified). Your client should handle these conditions safely. You'll also notice a stats block that reveals some count data about the venue. herenow shows the number of people currently there (this value can be 0).",
                "operationId": "searchVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location, so response can include distance."
                    },
                    {
                        "name": "llAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of latitude and longitude, in meters."
                    },
                    {
                        "name": "alt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Altitude of the user's location, in meters."
                    },
                    {
                        "name": "altAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of the user's altitude, in meters."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A search term to be applied against venue names."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 50."
                    },
                    {
                        "name": "intent",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "checkin",
                            "browse",
                            "match"
                        ],
                        "type": "integer",
                        "description": "One of the values checkin, browse or match, indicating your intent in performing the search. If no value is specified, defaults to checkin."
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Limit results to venues within this many meters of the specified location. Defaults to a city-wide area. Only valid for requests with intent=browse, or requests with intent=checkin and categoryId or query. Does not apply to match intent requests. The maximum supported radius is currently 100,000 meters."
                    },
                    {
                        "name": "sw",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "With ne, limits results to the bounding quadrangle defined by the latitude and longitude given by sw as its south-west corner, and ne as its north-east corner. The bounding quadrangle is only supported for intent=browse searches. Not valid with ll or radius. Bounding quadrangles with an area up to approximately 10,000 square kilometers are supported."
                    },
                    {
                        "name": "ne",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "See sw."
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A comma separated list of categories to limit results to. This is an experimental feature and subject to change or may be unavailable. If you specify categoryId you may also specify a radius. If specifying a top-level category, all sub-categories will also match the query."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A third-party URL which we will attempt to match against our map of venues to URLs. This is an experimental API and subject to change or breakage."
                    },
                    {
                        "name": "providerId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identifier for a known third party that is part of our map of venues to URLs, used in conjunction with linkedId. This is an experimental API and subject to change or breakage."
                    },
                    {
                        "name": "linkedId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identifier used by third party specified in providerId, which we will attempt to match against our map of venues to URLs. This is an experimental API and subject to change or breakage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/suggestcompletion": {
            "get": {
                "description": "Returns a list of mini-venues partially matching the search term, near the location. This is an experimental endpoint and very much subject to change. Please provide us feedback in the forum.",
                "operationId": "listSuggestCompletionVenues_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A search term to be applied against titles. Must be at least 3 characters long."
                    },
                    {
                        "name": "llAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of latitude and longitude, in meters. (Does not currently affect search results.)"
                    },
                    {
                        "name": "alt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Altitude of the user's location, in meters. (Does not currently affect search results.)"
                    },
                    {
                        "name": "altAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of the user's altitude, in meters. (Does not currently affect search results.)"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/timeseries": {
            "get": {
                "description": "Get daily venue stats for a list of venues over a time range.",
                "operationId": "getVenueTimeSeriesData_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A comma-separated list of venue ids to retrieve series data for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "startAt",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The start of the time range to retrieve stats for (seconds since epoch)."
                    },
                    {
                        "name": "endAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The end of the time range to retrieve stats for (seconds since epoch). If omitted, the current time is assumed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/trending": {
            "get": {
                "description": "Returns a list of venues near the current location with the most people currently checked in.",
                "operationId": "listTrending_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 50."
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Radius in meters, up to approximately 2000 meters."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/events": {
            "get": {
                "description": "Allows you to access information about the current events at a place. At this time we are only able to distribute Music events and limited information about Movie events via this endpoint due to partner restrictions.",
                "operationId": "getEvents_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue id for which events are being requested."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/herenow": {
            "get": {
                "description": "Provides a count of how many people are at a given venue. If the request is user authenticated, also returns a list of the users there, friends-first. This is an experimental API. We're excited about the innovation we think it enables as a much more efficient version of fetching all data about a venue, but we're also still learning if this right approach. Please give it a shot and provide feedback on the mailing list.",
                "operationId": "getVenueDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of venue to retrieve"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Used to page through results."
                    },
                    {
                        "name": "afterTimestamp",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Retrieve the first results to follow these seconds since epoch. This should be useful when polling for changes. To avoid missing results when polling, we recommend subtracting several seconds from the last poll time and then de-duplicating."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/links": {
            "get": {
                "description": "Returns URLs or identifiers from third parties that have been applied to this venue, such as how the New York Times refers to this venue and a URL for additional information from nytimes.com. This is part of the foursquare Venue Map. This is an experimental endpoint and very much subject to change. Please provide us feedback in the forum.",
                "operationId": "getLinks_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue you want annotations for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/listed": {
            "get": {
                "description": "The lists that this venue appears on.",
                "operationId": "getListsForVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of a venue to get lists for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "created",
                            "edited",
                            "followed",
                            "friends",
                            "suggested"
                        ],
                        "type": "integer",
                        "description": "Can be created, edited, followed, friends, other. If no acting user is present, only other is supported."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 200."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Used to page through results. Must specify a group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/menu": {
            "get": {
                "description": "Returns menu information for a venue. In some cases, menu information is provided by our partners. When displaying the information from a partner, you must attribute them using the attribution information included in the provider field.",
                "operationId": "getMenu_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue id for which menu is being requested."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/photos": {
            "get": {
                "description": "Returns photos for a venue.",
                "operationId": "getVenuePhotos_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue you want photos for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "created",
                            "edited",
                            "followed",
                            "friends",
                            "suggested"
                        ],
                        "type": "integer",
                        "description": "Pass \"checkin\" for photos added by friends on their recent checkins. Pass \"venue\" for public photos added to the venue by anyone. Use multi service to fetch both."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/similar": {
            "get": {
                "description": "Returns a list of venues similar to the specified venue.",
                "operationId": "getVenuesSimilar_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue you want similar venues for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/stats": {
            "get": {
                "description": "Get venue stats over a given time range.",
                "operationId": "getStats_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue id to retrieve stats for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "startAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The start of the time range to retrieve stats for (seconds since epoch). If omitted, all-time stats will be returned."
                    },
                    {
                        "name": "endAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The end of the time range to retrieve stats for (seconds since epoch). If omitted, the current time is assumed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/tips": {
            "get": {
                "description": "Returns tips for a venue.",
                "operationId": "getVenueTips_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue where you want to add this tip."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "recent",
                            "nearby",
                            "popular"
                        ],
                        "type": "integer",
                        "description": "One of friends, recent, or popular"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/edit": {
            "post": {
                "description": "Allows you to make changes to a venue (acting user must be a superuser or venue manager). Any blank parameter deletes an old value, any unspecified parameter does nothing.",
                "operationId": "Create_editVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue id to edit."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the venue."
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The address of the venue."
                    },
                    {
                        "name": "crossStreet",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The nearest intersecting street or streets."
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The city name where this venue is."
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The nearest state or province to the venue."
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The zip or postal code for the venue."
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The phone number of the venue."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the venue."
                    },
                    {
                        "name": "categoryId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The IDs of the category or categories to which you want to assign this venue (separate multiple IDs with commas)."
                    },
                    {
                        "name": "twitter",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The twitter handle of the venue."
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A freeform description of the venue, up to 300 characters."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The url of the homepage of the venue."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/flag": {
            "post": {
                "description": "Allows users to indicate a venue is incorrect in some way. Flags are pushed into a moderation queue. If a closed flag is approved, the venue will no longer show up in search results. Moderators will attempt to correct cases of mislocated or duplicate venues as appropriate. If the user has the correct address for a mislocated venue, use proposeedit instead.",
                "operationId": "Create_flagVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue id for which an edit is being proposed."
                    },
                    {
                        "name": "problem",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "mislocated",
                            "closed",
                            "duplicate",
                            "inappropriate",
                            "doesnt_exist",
                            "event_over"
                        ],
                        "type": "integer",
                        "description": "One of mislocated, closed, duplicate, inappropriate, doesnt_exist, event_over."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of the duplicated venue (for problem duplicate)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/marktodo": {
            "post": {
                "description": "Allows you to mark a venue to-do, with optional text. Note: The lists additem endpoint is now the preferred way to add a venue to a user's To-do list (/v2/lists/USER_ID/todos/additem) as well as mark a venue done (/v2/lists/USER_ID/dones/additem).",
                "operationId": "Create_markToDo_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue you want to mark to-do."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The text of the tip."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venues/{VENUE_ID}/proposeedit": {
            "post": {
                "description": "Allows you to propose a change to a venue. If the user knows a correct address, use this method to save it. Otherwise, use flag to flag the venue instead (you need not specify a new address or geolat/geolong in that case).",
                "operationId": "Create_proposeChange_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "VENUE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue id for which an edit is being proposed."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the venue."
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The address of the venue."
                    },
                    {
                        "name": "crossStreet",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The nearest intersecting street or streets."
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The city name where this venue is."
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The nearest state or province to the venue."
                    },
                    {
                        "name": "zip",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The zip or postal code for the venue."
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The phone number of the venue."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the venue, as accurate as is known."
                    },
                    {
                        "name": "primaryCategoryId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the category to which you want to assign this venue."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venuegroups/{GROUP_ID}": {
            "get": {
                "description": "Get venue group details.",
                "operationId": "getGroup_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "GROUP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the venue group to retrieve additional information for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venuegroups/add": {
            "post": {
                "description": "Create a venue group.",
                "operationId": "createGroup_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name to give the group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venuegroups/{GROUP_ID}/delete": {
            "post": {
                "description": "Delete a venue group.",
                "operationId": "Create_deleteGroup_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "GROUP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the venue group to delete."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venuegroups/list": {
            "get": {
                "description": "List all venue groups owned by the user.",
                "operationId": "listGroups_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venuegroups/{GROUP_ID}/addvenue": {
            "post": {
                "description": "Add a venue to a venue group.",
                "operationId": "addVenueToGroup_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "GROUP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the venue group."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Comma-delimited list of venue IDs to add to the group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/venuegroups/{GROUP_ID}/removevenue": {
            "post": {
                "description": "Remove a venue from a venue group.",
                "operationId": "Create_removeVenue_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "GROUP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the venue group."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Comma-delimited list of venue IDs to remove from the group."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/checkins/{CHECKIN_ID}": {
            "get": {
                "description": "Get details of a checkin.",
                "operationId": "getCheckinDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CHECKIN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the checkin to retrieve additional information for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "When checkins are sent to public feeds such as Twitter, foursquare appends a signature (s=XXXXXX) allowing users to bypass the friends-only access check on checkins. The same value can be used here for programmatic access to otherwise inaccessible checkins. Callers should use the bit.ly API to first expand 4sq.com links."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/checkins/add": {
            "post": {
                "description": "Allows you to check in to a place.",
                "operationId": "addCheckin_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue where the user is checking in. No venueid is needed if shouting or just providing a venue name. Find venue IDs by searching or from historical APIs."
                    },
                    {
                        "name": "broadcast",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "public",
                        "type": "string",
                        "description": "Who to broadcast this check-in to. Accepts a comma-delimited list of values:\nprivate (off the grid) or public (share with friends)\nfacebook share on facebook\ntwitter share on twitter\nfollowers share with followers (celebrity mode users only)\nIf no valid value is found, the default is public. Shouts cannot be private."
                    },
                    {
                        "name": "venue",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If are not shouting, but you don't have a venue ID or would rather prefer a 'venueless' checkin, pass the venue name as a string using this parameter. It will become an 'orphan' (no address or venueid but with geolat, geolong)."
                    },
                    {
                        "name": "eventId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The event the user is checking in to. A venueId for a venue with this eventId must also be specified in the request."
                    },
                    {
                        "name": "shout",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A message about your check-in. The maximum length of this field is 140 characters."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location. Only specify this field if you have a GPS or other device reported location for the user at the time of check-in."
                    },
                    {
                        "name": "llAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of the user's latitude and longitude, in meters."
                    },
                    {
                        "name": "alt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Altitude of the user's location, in meters."
                    },
                    {
                        "name": "altAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Vertical accuracy of the user's location, in meters."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/checkins/recent": {
            "get": {
                "description": "Returns a list of recent checkins from friends.",
                "operationId": "getCheckins_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location, so response can include distance."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 100."
                    },
                    {
                        "name": "afterTimestamp",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Seconds after which to look for checkins, e.g. for looking for new checkins since the last fetch. If more than limit results are new since then, this is ignored. Checkins created prior to this timestamp will still be returned if they have new comments or photos, making it easier to poll for all new activity."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/checkins/{CHECKIN_ID}/addcomment": {
            "post": {
                "description": "Comment on a checkin-in",
                "operationId": "addCheckinComment_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CHECKIN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the checkin to add a comment to."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The text of the comment, up to 200 characters."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/checkins/{CHECKIN_ID}/deletecomment": {
            "post": {
                "description": "Remove a comment from a checkin, if the acting user is the author or the owner of the checkin.",
                "operationId": "Create_removeCheckinComment_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CHECKIN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the checkin to remove a comment from."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "commentId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of the comment to remove."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/{TIP_ID}": {
            "get": {
                "description": "Gives details about a tip, including which users (especially friends) have marked the tip to-do or done.",
                "operationId": "getTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TIP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of tip to retrieve."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/add": {
            "post": {
                "description": "Allows you to add a new tip at a venue.",
                "operationId": "addTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The venue where you want to add this tip."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The text of the tip, up to 200 characters."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A URL related to this tip."
                    },
                    {
                        "name": "broadcast",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Whether to broadcast this tip. Send twitter if you want to send to twitter, facebook if you want to send to facebook, or twitter,facebook if you want to send to both."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/search": {
            "get": {
                "description": "Returns a list of tips near the area specified. This endpoint is deprecated. We recommend using venues/explore instead.",
                "operationId": "getTips_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 500."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used to page through results."
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If set to friends, only show nearby tips from friends."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Only find tips matching the given term, cannot be used in conjunction with friends filter."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/{TIP_ID}/done": {
            "get": {
                "description": "Returns an array of users have done this tip.",
                "operationId": "getUsersWhoHaveDone_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TIP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of a tip to get users who have marked the tip as done."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 200."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/{TIP_ID}/listed": {
            "get": {
                "description": "The lists that this tip appears on.",
                "operationId": "getListsForTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TIP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of a tip to get lists for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "created",
                            "edited",
                            "followed",
                            "friends",
                            "suggested"
                        ],
                        "type": "integer",
                        "description": "Can be created, edited, followed, friends, other. If no acting user is present, only other is supported."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/{TIP_ID}/markdone": {
            "post": {
                "description": "Allows the acting user to mark a tip done. Note: The lists additem endpoint is now the preferred way to add a tip to a user's To-do list (/v2/lists/USER_ID/todos/additem) as well as mark a tip done (/v2/lists/USER_ID/dones/additem).",
                "operationId": "Create_markDoneTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TIP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The tip you want to mark done."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/{TIP_ID}/marktodo": {
            "post": {
                "description": "Allows you to mark a tip to-do. Note: The lists additem endpoint is now the preferred way to add a tip to a user's To-do list (/v2/lists/USER_ID/todos/additem) as well as mark a tip done (/v2/lists/USER_ID/dones/additem).",
                "operationId": "Create_markToDoTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TIP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The tip you want to mark to-do"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tips/{TIP_ID}/unmark": {
            "post": {
                "description": "Allows you to remove a tip from your to-do list or done list. Note: The lists deleteitem endpoint is now the preferred way to remove a tip from a user's To-do list (/v2/lists/USER_ID/todos/deleteitem) as well as unmark a tip done (/v2/lists/USER_ID/dones/deleteitem).",
                "operationId": "Create_unmarkTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "TIP_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The tip you want to unmark."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}": {
            "get": {
                "description": "Gives details about a list. The list id parameter can be a user-created list id as well as one of USER_ID/tips, USER_ID/todos, or USER_ID/dones. Note that a user's todos and dones are only visible to their friends.",
                "operationId": "getListDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "id for a user-created (e.g. /v2/lists/12381902N) or followed list or one of USER_ID/tips (e.g. /v2/lists/32/tips), USER_ID/todos, or USER_ID/dones."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 200."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The number of results to skip. Used to page through results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/add": {
            "post": {
                "description": "Allows users to create a new list.",
                "operationId": "createList_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the list."
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The description of the list."
                    },
                    {
                        "name": "collaborative",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "Indicating if this list can be edited by friends."
                    },
                    {
                        "name": "photoId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of a photo that should be set as the list photo."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/followers": {
            "get": {
                "description": "Returns a count and items of users following this list. Note: Only valid on user-created lists.",
                "operationId": "getFollowers_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/suggestphoto": {
            "get": {
                "description": "Suggests photos that may be appropriate for this item. Note: Only valid on user-created lists.",
                "operationId": "Get_suggestPhoto_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id of item on this list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/suggesttip": {
            "get": {
                "description": "Suggests tips that may be appropriate for this item. Note: Only valid on user-created lists.",
                "operationId": "Get_suggestTip_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id of item on this list."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/suggestvenues": {
            "get": {
                "description": "Suggests venues that may be appropriate for this list. Note: Only valid on user-created lists.",
                "operationId": "Get_suggestVenues_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/additem": {
            "post": {
                "description": "Allows you to add an item to a list. All fields are optional, but exactly one of the following must be specified: venueId, tipId, listId and itemId. Note: This endpoint is now the preferred way to add an item to a user's To-do list (/v2/lists/USER_ID/todos/additem) as well as mark an item done (/v2/lists/USER_ID/dones/additem).",
                "operationId": "addItem_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created or followed list as well as one of USER_ID/tips, USER_ID/todos, or USER_ID/dones."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A venue to add to the list."
                    },
                    {
                        "name": "tipId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used to add a tip to a list. Cannot be used in conjunction with the text and url fields."
                    },
                    {
                        "name": "listId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used in conjuction with itemId, the id for a user created or followed list as well as one of USER_ID/tips, USER_ID/todos, or USER_ID/dones."
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Used in conjuction with listId, the id of an item on that list that we wish to copy to this list."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If the target is a user-created list, this will create a public tip on the venue. If the target is /userid/todos, the text will be a private note that is only visible to the author."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If adding a new tip via text, this can associate a url with the tip."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/deleteitem": {
            "post": {
                "description": "Allows you to delete an item from a list. Note: This endpoint is now the preferred way to delete an item from a user's To-do list (/v2/lists/USER_ID/todos/deleteitem) as well as unmark an item done (/v2/lists/USER_ID/dones/deleteitem). Note: Collaborators can only delete items they added. List owners may delete any item.",
                "operationId": "Create_deleteItem_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created or followed list or one of USER_ID/tips, USER_ID/todos, or USER_ID/dones"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id of the item to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/follow": {
            "post": {
                "description": "Allows you to follow a list. Note: Only valid on user-created lists.",
                "operationId": "Create_followList_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id of a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/moveitem": {
            "post": {
                "description": "Allows you to move an item on a list. One of beforeId or afterId must be specified. Note: Only valid on user-created lists.",
                "operationId": "Create_moveItem_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created or followed list or one of USER_ID/tips, USER_ID/todos, or USER_ID/dones"
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id of the item on this list to move."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/share": {
            "post": {
                "description": "Share a user-created list to twitter or facebook. Note: Only valid on user-created lists.",
                "operationId": "Create_shareList_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "broadcast",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "twitter",
                            "facebook",
                            "twitter,facebook"
                        ],
                        "type": "integer",
                        "description": "Where to broadcast this list. Send \"twitter\" if you want to send to twitter, \"facebook\" if you want to send to facebook, or \"twitter,facebook\" if you want to send to both."
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A personal note to include with the share."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/unfollow": {
            "post": {
                "description": "Allows you to unfollow a list. Note: Only valid on user-created lists.",
                "operationId": "Create_unfollowList_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id of a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/update": {
            "post": {
                "description": "Allows you to update a list. Note: Only valid on user-created lists.",
                "operationId": "updateList_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If present and a non-empty value, updates the List name."
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If present and a non-empty value, updates the List description. If present and empty, will remove the List description."
                    },
                    {
                        "name": "collaborative",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "Indicating if this list can be edited by friends."
                    },
                    {
                        "name": "photoId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If present and a non-empty value, updates the List photo. If present and empty, will remove the List photo."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/lists/{LIST_ID}/updateitem": {
            "post": {
                "description": "Allows you to add or remove photos and tips from items on user-created lists. Note: Only valid on user-created lists. Note: Collaborators can only update items they added. List owners can not update any item.",
                "operationId": "updateItem_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "LIST_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Id for a user-created list."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "itemId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of an item on this list."
                    },
                    {
                        "name": "tipId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If present and a non-empty value, adds or replaces a tip on this item. If present and empty, will remove the tip on this item."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If present creates a public tip on the venue and replaces any existing tip on the item. Cannot be used in conjuction with tipId or photoId."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If adding a new tip via text, this can associate a url with the tip."
                    },
                    {
                        "name": "photoId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If present and a non-empty value, adds a photo to this item. If present and empty, will remove the photo on this item. If the photo was a private checkin photo, it will be promoted to a public venue photo."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/updates/{UPDATE_ID}": {
            "get": {
                "description": "Retrieve an update.",
                "operationId": "retrieveUpdate_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "UPDATE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the update to retrieve."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/updates/notifications": {
            "get": {
                "description": "Retrieve a user's notification tray notifications.",
                "operationId": "retrieveNotification_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Maximum number of results to return, up to 99. Notifications are grouped over time, so there will usually be fewer than 99 results available at any given time. offset 0 Used to page through results. Only the 99 most recent notifications are visible, so offset must be no more than 99 - limit."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/updates/marknotificationsread": {
            "post": {
                "description": "Mark notification tray notifications as read up, to a certain timestamp.",
                "operationId": "Create_markNotificationsRead_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "highWatermark",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "The timestamp of the most recent notification that the user viewed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/photos/{PHOTO_ID}": {
            "get": {
                "description": "Get details of a photo.",
                "operationId": "getPhotoDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "PHOTO_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the photo to retrieve additional information for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/photos/add": {
            "post": {
                "description": "Allows users to add a new photo to a checkin, tip, or a venue in general.",
                "operationId": "addPhoto_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "image/jpeg",
                        "type": "string",
                        "description": "Content-Type."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "image",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The image file data."
                    },
                    {
                        "name": "broadcast",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "twitter",
                            "facebook",
                            "twitter,facebook"
                        ],
                        "type": "integer",
                        "description": "Whether to broadcast this photo. Send \"twitter\" if you want to send to twitter, \"facebook\" if you want to send to facebook, or \"twitter,facebook\" if you want to send to both."
                    },
                    {
                        "name": "public",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "When the checkinId is also provided (meaning this is a photo attached to a checkin), this parameter allows for making the photo public and viewable at the venue. Valid values are 1 and 0 (default). Note that photos attached to venues and tips are always public."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude of the user's location."
                    },
                    {
                        "name": "llAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of the user's latitude and longitude, in meters."
                    },
                    {
                        "name": "alt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Altitude of the user's location, in meters."
                    },
                    {
                        "name": "altAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Vertical accuracy of the user's location, in meters."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/settings/{SETTING_ID}": {
            "get": {
                "description": "Returns a setting for the acting user.",
                "operationId": "getSetting_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SETTING_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of a setting."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/settings/all": {
            "get": {
                "description": "Returns the settings of the acting user.",
                "operationId": "getAllSettings_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/settings/{SETTING_ID}/set": {
            "post": {
                "description": "Change a setting for the given user.",
                "operationId": "Create_setSetting_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SETTING_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "sendToTwitter",
                            "sendMayorshipsToTwitter",
                            "sendBadgesToTwitter",
                            "sendToFacebook",
                            "sendMayorshipsToFacebook",
                            "sendBadgesToFacebook",
                            "receivePings",
                            "receiveCommentPings"
                        ],
                        "type": "integer",
                        "description": "Name of setting to change."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "1",
                            "0"
                        ],
                        "type": "integer",
                        "description": "1 for true, and 0 for false."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/{SPECIAL_ID}": {
            "get": {
                "description": "Gives details about a special, including text and whether it is unlocked for the current user.",
                "operationId": "getSpecialDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SPECIAL_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of special to retrieve."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of a venue the special is running at."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/add": {
            "post": {
                "description": "Allows you to create a new special.",
                "operationId": "createSpecial_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Maximum length of 200 characters."
                    },
                    {
                        "name": "unlockedText",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Maximum length of 200 characters. Special text that is shown when the user has unlocked the special."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "mayor",
                            "frequency",
                            "count",
                            "regular",
                            "swarm",
                            "friends",
                            "flash"
                        ],
                        "type": "integer",
                        "description": "The type of special.\nMayor: unlocked only for the mayor.\nFrequency: unlocked every count1 check-ins.\nCount: unlocked on the count1th check-in (all-time).\nRegular: unlocked if you have checked in at least count1 times in the last count2 days.\nSwarm: unlocked if there are count1 people here right now (but only for the first count1 people).\nFriends: unlocked if at least count1 friends check in together.\nFlash: first-come first-serve; unlocked for the first count1 people to check in between count2 and count3 (given in minutes since midnight, local time).each day. In all cases, the user must be at the venue (checked in within the last 3 hours, and not having checked in anywhere else since then) to unlock a special."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A name for the special."
                    },
                    {
                        "name": "finePrint",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Maximum length of 200 characters. Fine print, shown in small type on the special detail page."
                    },
                    {
                        "name": "count1",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Count for frequency, count, regular, swarm, friends, and flash specials."
                    },
                    {
                        "name": "count2",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Secondary count for regular, flash specials."
                    },
                    {
                        "name": "count3",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Tertiary count for flash specials."
                    },
                    {
                        "name": "offerId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Maximum length of 16 characters. Internal id in your 3rd party system."
                    },
                    {
                        "name": "cost",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The amount of money the user must spend to use this special in dollars and cents. For example, 5.50 meaning 5 dollars and 50 cents."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/list": {
            "get": {
                "description": "List available specials.",
                "operationId": "getSpecials_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Comma-separated list of venue IDs; filters results to the specials assigned to the venue(s)."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "pending",
                            "active",
                            "expired",
                            "all"
                        ],
                        "type": "integer",
                        "description": "Which specials to return: pending, active, expired, all"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/search": {
            "get": {
                "description": "Returns a list of specials near the current location. This is an experimental API. We'd love your feedback as we solidify it over the next few weeks.",
                "operationId": "searchSpecials_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Latitude and longitude to search near."
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Limit results to venues within this many meters of the specified location. Defaults to a city-wide area."
                    },
                    {
                        "name": "llAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of latitude and longitude, in meters."
                    },
                    {
                        "name": "alt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Altitude of the user's location, in meters."
                    },
                    {
                        "name": "altAcc",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Accuracy of the user's altitude, in meters."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of results to return, up to 50."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/{SPECIAL_ID}/configuration": {
            "get": {
                "description": "Get special configuration details.",
                "operationId": "getSpecialConfigurationDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SPECIAL_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the special to retrieve configuration details for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/{ID}/flag": {
            "post": {
                "description": "Allows users to indicate a Special is improper in some way. Flags are pushed into a moderation queue where they are reviewed. If the issue is valid, appropriate action will be taken.",
                "operationId": "addFlag_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of the special being flagged."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of the venue running the special."
                    },
                    {
                        "name": "problem",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "mislocated",
                            "closed",
                            "duplicate",
                            "inappropriate",
                            "doesnt_exist",
                            "event_over"
                        ],
                        "type": "integer",
                        "description": "One of not_redeemable, not_valuable, other."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Additional text about why the user has flagged this special."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/specials/{SPECIAL_ID}/retire": {
            "post": {
                "description": "Retire a special. Retired specials will not show up in the list of specials and cannot be assigned to a group. Also ends any active campaigns associated with the special.",
                "operationId": "Create_retireSpecial_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SPECIAL_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the special to retire."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/{CAMPAIGN_ID}": {
            "get": {
                "description": "Get details of a campaign.",
                "operationId": "getCampaignDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CAMPAIGN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the campaign to retrieve additional information for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/add": {
            "post": {
                "description": "Create a campaign. The special must be started in order for it to be visible to users.",
                "operationId": "createCampaign_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "specialId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "required (unless campaignId has been provided). Special ID."
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "required (unless venueId has been provided). Comma-separated list of venue group IDs."
                    },
                    {
                        "name": "venueId",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "required (unless groupId has been provided). Comma-separated list of venue IDs."
                    },
                    {
                        "name": "endAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "DateTime when the campaign is to be automatically deactivated (seconds since epoch)."
                    },
                    {
                        "name": "startAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "DateTime when the campaign is to be started (seconds since epoch). If this parameter is not specified, the campaign will be in a pending state until the campaign is actually started via the start action. If this parameter is specified and is in the past, the campaign will be started as of the current time."
                    },
                    {
                        "name": "campaignId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "ID of an existing campaign to copy. The existing campaign will be used to supply values for all parameters other than the startAt and endAt parameters. Accordingly, the specialId parameter is optional when campaignId has been specified, but may be specified to override the special ID obtained from the existing campaign. Similarly, the groupId and venueId parameters can also be specified to override the values obtained from the existing campaign."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/list": {
            "get": {
                "description": "List all campaigns matching the given criteria.",
                "operationId": "listCampaigns_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "specialId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If specified, limits response to campaigns involving the given special."
                    },
                    {
                        "name": "groupId",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If specified, limits response to campaigns involving the given group."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "pending",
                            "active",
                            "expired",
                            "all"
                        ],
                        "default": "all",
                        "type": "integer",
                        "description": "Which campaigns to return: pending, active, expired, all (default=all)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/{CAMPAIGN_ID}/timeseries": {
            "get": {
                "description": "Get daily campaign stats over a given time range.",
                "operationId": "getDailyCampaignStats_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CAMPAIGN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The campaign id to retrieve stats for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "startAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The start of the time range to retrieve stats for (seconds since epoch). If omitted, the campaign start time will be used."
                    },
                    {
                        "name": "endAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The end of the time range to retrieve stats for (seconds since epoch). If omitted, the campaign end time or the current time will be used, whichever occurs first."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/{CAMPAIGN_ID}/delete": {
            "post": {
                "description": "Delete a campaign that has never been activated.",
                "operationId": "Create_deleteCampaign_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CAMPAIGN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the campaign to delete."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/{CAMPAIGN_ID}/end": {
            "post": {
                "description": "End a campaign.",
                "operationId": "Create_endCampaign_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CAMPAIGN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the campaign to end."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/campaigns/{CAMPAIGN_ID}/start": {
            "post": {
                "description": "Currently we only allow two active specials per venue at a time. If any venue in the group associated with this campaign already has two active specials, this call will fail (with a helpful error message).",
                "operationId": "Create_startCampaign_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "CAMPAIGN_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the campaign to start."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "startAt",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "DateTime when the campaign is to be started (seconds since epoch). If this parameter is not specified or is in the past, the campaign will be started as of the current time."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/events/{EVENT_ID}": {
            "get": {
                "description": "Get details of a event.",
                "operationId": "getEventDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "EVENT_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the event to retrieve additional information for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/events/categories": {
            "get": {
                "description": "Returns a hierarchical list of categories applied to events.",
                "operationId": "getEventCategories_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/events/search": {
            "get": {
                "description": "This is an experimental API and subject to change or breakage. Returns a list of events matching the search parameters.",
                "operationId": "searchEvents_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "songkick.com",
                        "type": "string",
                        "description": "Identifier for a known third-party event provider. This is used in conjunction with id. Currently songkick.com is the only supported value."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/pages/{PAGE_ID}": {
            "get": {
                "description": "Returns user details for a page. Will return error if user specified is not a page.",
                "operationId": "getUserDetailsForPage_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "PAGE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Identity of the page to get details for."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/pages/search": {
            "get": {
                "description": "Returns a list of pages matching the search term.",
                "operationId": "searchPages_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/pages/{PAGE_ID}/venues": {
            "get": {
                "description": "Allows you to get the page's venues.",
                "operationId": "getPageVenues_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "PAGE_ID",
                        "in": "path",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The page id for which venues are being requested."
                    },
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "ll",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Not valid with ne or sw. Limits results to venues near this latitude and longitude within an optional radius."
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Can be used when including ll. Not valid with ne or sw. Limit results to venues within this many meters of the specified ll. The maximum supported radius is currently 100,000 meters."
                    },
                    {
                        "name": "sw",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "With ne, limits results to the bounding quadrangle defined by the latitude and longitude given by sw as its south-west corner, and ne as its north-east corner. Not valid with ll or radius. Bounding quadrangles with an area up to approximately 10,000 square kilometers are supported."
                    },
                    {
                        "name": "ne",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "See sw."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The offset of which venues to return. Defaults to 0."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of venues to return. Defaults to 20, max of 100."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/multi": {
            "get": {
                "description": "Does multiple (up to 5) requests at once. If specifying a v=YYYYMMDD param, be sure to use it for the top-level.",
                "operationId": "Get_multipleRequests_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "v",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "20131016",
                        "type": "string",
                        "description": "All requests now accept a v=YYYYMMDD param, which indicates that the client is up to date as of the specified date. Sometimes we may need to make breaking changes to an API. Although we’ll do everything possible to avoid this, when we do so we will use this parameter to give you time to transition to the new implementation. Requests to deprecated endpoints will return 200s, but they will also contain errorType deprecated in the meta section of the response. Clients that wish to be robust against changes should always pass    v=DATEVERIFIED (in the YYYYMMDD format) and watch for any deprecated responses coming back from the server. We expect to allow at least several months for any transitions. Not passing the v parameter will currently return the oldest version of the API. In the future, the default will be to use the most recent API (instead of current default, which is to use the oldest API). Over time, we will phase out support for legacy behavior."
                    },
                    {
                        "name": "requests",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A comma-delimited list of API requests."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkin, explore your city and connect people and places <b>(API v2).</b>",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "group": {
            "title": "group",
            "type": "integer",
            "format": "int32",
            "enum": [
                "created",
                "edited",
                "followed",
                "friends",
                "suggested"
            ]
        },
        "sort": {
            "title": "sort",
            "type": "integer",
            "format": "int32",
            "enum": [
                "recent",
                "nearby",
                "popular"
            ]
        },
        "Content-Type": {
            "title": "Content-Type",
            "type": "integer",
            "format": "int32",
            "enum": [
                "image/jpeg",
                "image/gif",
                "image/png"
            ]
        },
        "section": {
            "title": "section",
            "type": "integer",
            "format": "int32",
            "enum": [
                "food",
                "drinks",
                "coffee",
                "shops",
                "arts",
                "outdoors"
            ]
        },
        "novelty": {
            "title": "novelty",
            "type": "integer",
            "format": "int32",
            "enum": [
                "new",
                "old"
            ]
        },
        "intent": {
            "title": "intent",
            "type": "integer",
            "format": "int32",
            "enum": [
                "checkin",
                "browse",
                "match"
            ]
        },
        "problem": {
            "title": "problem",
            "type": "integer",
            "format": "int32",
            "enum": [
                "mislocated",
                "closed",
                "duplicate",
                "inappropriate",
                "doesnt_exist",
                "event_over"
            ]
        },
        "broadcast": {
            "title": "broadcast",
            "type": "integer",
            "format": "int32",
            "enum": [
                "twitter",
                "facebook",
                "twitter,facebook"
            ]
        },
        "SETTING_ID": {
            "title": "SETTING_ID",
            "type": "integer",
            "format": "int32",
            "enum": [
                "sendToTwitter",
                "sendMayorshipsToTwitter",
                "sendBadgesToTwitter",
                "sendToFacebook",
                "sendMayorshipsToFacebook",
                "sendBadgesToFacebook",
                "receivePings",
                "receiveCommentPings"
            ]
        },
        "value": {
            "title": "value",
            "type": "integer",
            "format": "int32",
            "enum": [
                "1",
                "0"
            ]
        },
        "type": {
            "title": "type",
            "type": "integer",
            "format": "int32",
            "enum": [
                "mayor",
                "frequency",
                "count",
                "regular",
                "swarm",
                "friends",
                "flash"
            ]
        },
        "status": {
            "title": "status",
            "type": "integer",
            "format": "int32",
            "enum": [
                "pending",
                "active",
                "expired",
                "all"
            ]
        }
    }
}
{
    "swagger": "2.0",
    "info": {
        "version": "",
        "title": "Yellow Pages",
        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        }
    },
    "host": "api2.yp.com",
    "basePath": "/content/v1/",
    "securityDefinitions": {},
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/listingmap": {
            "get": {
                "description": "Returns an URL for a graphical map for a specified business listing.",
                "operationId": "getBusinessListingMap_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "listingid",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "YP listing ID."
                    },
                    {
                        "name": "pixel_width",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 400.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "Integer representing the width in pixels of the map (Default = 400). Examples: 400, 200, 123."
                    },
                    {
                        "name": "pixel_height",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 400.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "Integer representing the height in pixels of the map (Default = 400). Examples: 400, 200, 123."
                    },
                    {
                        "name": "image_format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "jpg",
                            "png",
                            "gif"
                        ],
                        "default": "gif",
                        "type": "integer",
                        "description": "String representing the mime-type of map you want returned. Valid values: jpg, png and gif."
                    },
                    {
                        "name": "zoom",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "Sets the zoom factor for the map, expressed as a fraction from .1 to 1."
                    },
                    {
                        "name": "pan_vertical",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": "0",
                        "type": "string",
                        "description": "A positive or negative number reflecting the percentage of the map image to pan south (negative) or north (positive). (Default = 0). Examples: 0.5 (50% north) -0.4 (40% south). Postiive numbers tilt to the north, negative numbers tilt to the south."
                    },
                    {
                        "name": "pan_horizontal",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A positive or negative number reflecting the percentage of the map image to pan west (negative) or east (positive). (Default = 0). Examples: 0.5 (50% east) -0.4 (40% west). Postiive numbers tilt to the north, negative numbers tilt to the south."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Supports a number of specific use cases for finding a listing. The search request must include a searchloc value to set the geographic context for the search. The term value can include both name and category keywords. Note that if your implementation uses a single search box, you can combine geograpy and keywords in the term value and the API will parse them. This can potentially cause inaccurate matches if the business name includes place names, however. For example, the \"LA wine Company\" might be found in a search for \"wine+LA\" where LA is intended to mean Louisiana. Therefore, where possible, use the searchloc + term combination.",
                "operationId": "searchListings_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "User-Agent",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "Chrome",
                        "type": "string",
                        "description": "User agent."
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Unparsed, user-entered search term. Note: For applications where users may provide the search term and location in a single input field (e.g. pizza, Los Angeles), the user-entered value can be sent in the term parameter thus avoiding the need to parse the term and location on the client side. To make this work, do not send a value for searchloc."
                    },
                    {
                        "name": "searchloc",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Unparsed, user-entered search location. Please ensure that all values are URL encoded. If no value is passed for searchloc, then the search engine will attempt to find a valid geo location string in the term parameter's value.\nValid inputs are:\n- city, state (example: searchloc=Glendale%2C+CA).\n- zip code (example: searchloc=91203).\n- lat:long (example: searchloc=37.7752%3A-122.4192 for San Francisco,CA).\n- street1 and street2, city, state (example: searchloc=olive+and+san+fernando%2C+burbank+CA).\n- street1 and street2, zip (example: searchloc=olive+and+san+fernando%2C+91502).\n- street, zip (example: searchloc=611+North+Brand%2C+91203).\n- street, city, state (example: searchloc=611+North+Brand%2C+Glendale+CA).\n- neighborhood, city, state (example: searchloc=chinatown%2C+san+francisco%2C+CA).\n- point of interest, city, state (example: searchloc=golden+gate+bridge%2C+san+francisco%2C+CA)."
                    },
                    {
                        "name": "phonesearch",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "Indicates that the term parameter contains a phone number, formatted as a 10-digit integer, e.g. 8775551212."
                    },
                    {
                        "name": "listingcount",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 5.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "Total number of listings to return. Defaults to 5."
                    },
                    {
                        "name": "shorturl",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "Enables short URL formats in the API response. Typically only used for SMS applications. Set to true for short URL format. Defaults to false."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "xml",
                            "json"
                        ],
                        "default": "xml",
                        "type": "integer",
                        "description": "Desired format of the response. Possible values: xml and json. Defaults to xml."
                    },
                    {
                        "name": "pagenum",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The page index of the block of results to return. Defaults to 1."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "distance",
                            "name"
                        ],
                        "type": "integer",
                        "description": "Select the sort criteria for Organic Listings (only).\nValid inputs are:\n- distance: Sort results by distance.\n- name: Sort results alphabetically by name."
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "Maximum search radius (in miles) from center of target location for Organic Results (only)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/details": {
            "get": {
                "description": "Returns all available data for a given business listing, including hours of operation, website URL, etc.",
                "operationId": "getBusinessListingDetails_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "User-Agent",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "Chrome",
                        "type": "string",
                        "description": "User agent."
                    },
                    {
                        "name": "listingid",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The unique identifier for the business listing."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "xml",
                            "json"
                        ],
                        "default": "xml",
                        "type": "integer",
                        "description": "Desired format of the response. Possible values: xml and json. Defaults to xml."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "description": "Returns all available user reviews for a given business listing.",
                "operationId": "getBusinessListingReviews_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "listingid",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The unique identifier for the business listing."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "xml",
                            "json"
                        ],
                        "default": "xml",
                        "type": "integer",
                        "description": "Desired format of the response. Possible values: xml and json. Defaults to xml."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "description": "Returns coupons near the submitted location. Optionally, a term parameter can be submitted to restrict coupons to relevant categories.",
                "operationId": "getCouponsNearLocation_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchloc",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Unparsed, user-entered search location. Please ensure that all values are URL encoded.\nValid inputs are:\n- city, state (example: searchloc=Glendale%2C+CA).\n- zip code (example: searchloc=91203).\n- lat:long (example: searchloc=37.7752%3A-122.4192 for San Francisco,CA).\n- street1 and street2, city, state (example: searchloc=olive+and+san+fernando%2C+burbank+CA).\n- street1 and street2, zip (example: searchloc=olive+and+san+fernando%2C+91502).\n- street, zip (example: searchloc=611+North+Brand%2C+91203).\n- street, city, state (example: searchloc=611+North+Brand%2C+Glendale+CA).\n- neighborhood, city, state (example: searchloc=chinatown%2C+san+francisco%2C+CA).\n- point of interest, city, state (example: searchloc=golden+gate+bridge%2C+san+francisco%2C+CA)."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "xml",
                            "json"
                        ],
                        "default": "xml",
                        "type": "integer",
                        "description": "Desired format of the response. Possible values: xml and json. Defaults to xml."
                    },
                    {
                        "name": "term",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Unparsed, user-entered search term. Note: For applications where users may provide the search term and location in a single input field (e.g. pizza, Los Angeles), the user-entered value can be sent in the term parameter thus avoiding the need to parse the term and location on the client side."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/deals": {
            "get": {
                "description": "Returns Deal of the Day offers near the submitted location. Currently, four US Markets are supported: Los Angeles, Atlanta, Dallas and National. You can use specific zip codes within the three city markets, the market city or \"national\". This endpoint only supports JSON format response at this time.",
                "operationId": "getDealOfTheDayNearLocation_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchloc",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Unparsed, user-entered search location. Please ensure that all values are URL encoded.\nValid inputs are:\n- city, state (example: searchloc=Glendale%2C+CA).\n- zip code (example: searchloc=91203).\n- lat:long (example: searchloc=37.7752%3A-122.4192 for San Francisco,CA).\n- street1 and street2, city, state (example: searchloc=olive+and+san+fernando%2C+burbank+CA).\n- street1 and street2, zip (example: searchloc=olive+and+san+fernando%2C+91502).\n- street, zip (example: searchloc=611+North+Brand%2C+91203).\n- street, city, state (example: searchloc=611+North+Brand%2C+Glendale+CA).\n- neighborhood, city, state (example: searchloc=chinatown%2C+san+francisco%2C+CA).\n- point of interest, city, state (example: searchloc=golden+gate+bridge%2C+san+francisco%2C+CA)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Use YP Places API to power your web and mobile apps with business listings, reviews, maps and much more...",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "image_format": {
            "title": "image_format",
            "type": "integer",
            "format": "int32",
            "enum": [
                "jpg",
                "png",
                "gif"
            ]
        },
        "format": {
            "title": "format",
            "type": "integer",
            "format": "int32",
            "enum": [
                "xml",
                "json"
            ]
        },
        "sort": {
            "title": "sort",
            "type": "integer",
            "format": "int32",
            "enum": [
                "distance",
                "name"
            ]
        }
    }
}
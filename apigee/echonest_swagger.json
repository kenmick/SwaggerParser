{
    "swagger": "2.0",
    "info": {
        "version": "",
        "title": "EchoNest",
        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
        "license": {
            "name": "MIT",
            "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
        }
    },
    "host": "developer.echonest.com",
    "basePath": "/api/v4/",
    "securityDefinitions": {},
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/artist/biographies": {
            "get": {
                "description": "Get a list of artist biographies.",
                "operationId": "Get_artist.biographies_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "license",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "object"
                        },
                        "description": "The desired licenses of the returned images."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/blogs": {
            "get": {
                "description": "Get a list of blog articles related to an artist.",
                "operationId": "Get_artist.blogs_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "high_relevance",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If true only items that are highly relevant for this artist will be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/familiarity": {
            "get": {
                "description": "Get our numerical estimation of how familiar an artist currently is to the world.",
                "operationId": "Get_artist.familiarity_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/hotttnesss": {
            "get": {
                "description": "Returns our numerical description of how hottt an artist currently is.",
                "operationId": "Get_artist.hotttnesss_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "overall",
                            "social",
                            "reviews",
                            "mainstream"
                        ],
                        "default": "overall",
                        "type": "string",
                        "description": "Controls the type of hotttnesss that is used."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/images": {
            "get": {
                "description": "Get a list of artist images.",
                "operationId": "Get_artist.images_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "license",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "object"
                        },
                        "description": "The desired licenses of the returned images."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/list_terms": {
            "get": {
                "description": "Get a list of the best typed descriptive terms for use with search.",
                "operationId": "Get_artist.list_terms_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "style",
                            "mood"
                        ],
                        "default": "style",
                        "type": "string",
                        "description": "The type of term that is of interest."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/news": {
            "get": {
                "description": "Get a list of news articles found on the web related to an artist.",
                "operationId": "Get_artist.news_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "high_relevance",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If true only news articles that are highly relevant for this artist will be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/profile": {
            "get": {
                "description": "Get basic information on an artist: the name, the Echo Nest ID, and the MusicBrainz ID.",
                "operationId": "Get_artist.profile_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned with each artist. Bucket:\nbiographies: returns up to the 15 most recent biographies found on the web related to the artist\nblogs: returns up to the 15 most recent blogs found on the web related to the artist\ndoc_counts(beta): returns document counts for each of the various artist document types\nfamiliarity: returns the familiarity for the artist\nhotttnesss: returns the hotttnesss for the artist\nimages: returns up to the 15 most recent images found on the web related to the artist\nnews: returns up to the 15 most recent news articles found on the web related to the artist\nreviews: returns up to the 15 most recent reviews found on the web related to the artist\nsongs(beta): returns up to the 15 hotttest songs for the artist\nurls: returns links to this artist's pages on various sites\nvideo: returns up to the 15 most recent videos found on the web related to the artist\nyears_active(beta): returns years active information for the artist\nid:rosetta-catalog: returns catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Taste-Profile-ID: returns personal catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/reviews": {
            "get": {
                "description": "Get reviews related to an artist's work.",
                "operationId": "Get_artist.reviews_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/search": {
            "get": {
                "description": "Search artists.",
                "operationId": "Get_artist.search_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned with each artist. Bucket:\nbiographies: returns up to the 15 most recent biographies found on the web related to the artist\nblogs: returns up to the 15 most recent blogs found on the web related to the artist\ndoc_counts(beta): returns document counts for each of the various artist document types\nfamiliarity: returns the familiarity for the artist\nhotttnesss: returns the hotttnesss for the artist\nimages: returns up to the 15 most recent images found on the web related to the artist\nnews: returns up to the 15 most recent news articles found on the web related to the artist\nreviews: returns up to the 15 most recent reviews found on the web related to the artist\nsongs(beta): returns up to the 15 hotttest songs for the artist\nurls: returns links to this artist's pages on various sites\nvideo: returns up to the 15 most recent videos found on the web related to the artist\nyears_active(beta): returns years active information for the artist\nid:rosetta-catalog: returns catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Taste-Profile-ID: returns personal catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given idspaces or catalogs."
                    },
                    {
                        "name": "style",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A musical style or genre like rock, jazz, or funky. See the method list_terms for details on what styles are currently available."
                    },
                    {
                        "name": "mood",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A mood like happy or sad. See the method list_terms for details on what moods are currently available."
                    },
                    {
                        "name": "rank_type",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "relevance",
                            "familiarity"
                        ],
                        "default": "relevance",
                        "type": "string",
                        "description": "For search by description, style or mood indicates whether results should be ranked by query relevance or by artist familiarity"
                    },
                    {
                        "name": "fuzzy_match",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "If true, a fuzzy search is performed."
                    },
                    {
                        "name": "max_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum familiarity for returned artists (0.0 < familiarity < 1.0). Default: 1.0"
                    },
                    {
                        "name": "min_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum familiarity for returned artists (0.0 < familiarity < 1.0). Default: 0.0"
                    },
                    {
                        "name": "max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss for returned artists (0.0 < hotttnesss < 1.0). Default: 1.0"
                    },
                    {
                        "name": "min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss for returned artists (0.0 < hotttnesss < 1.0). Default: 0.0"
                    },
                    {
                        "name": "artist_start_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_start_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "object",
                        "description": "Specified the sort order of the results."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/extract": {
            "get": {
                "description": "Extract artist names from text.",
                "operationId": "Get_artist.extract_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned with each artist. Bucket:\nbiographies: returns up to the 15 most recent biographies found on the web related to the artist\nblogs: returns up to the 15 most recent blogs found on the web related to the artist\ndoc_counts(beta): returns document counts for each of the various artist document types\nfamiliarity: returns the familiarity for the artist\nhotttnesss: returns the hotttnesss for the artist\nimages: returns up to the 15 most recent images found on the web related to the artist\nnews: returns up to the 15 most recent news articles found on the web related to the artist\nreviews: returns up to the 15 most recent reviews found on the web related to the artist\nsongs(beta): returns up to the 15 hotttest songs for the artist\nurls: returns links to this artist's pages on various sites\nvideo: returns up to the 15 most recent videos found on the web related to the artist\nyears_active(beta): returns years active information for the artist\nid:rosetta-catalog: returns catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Taste-Profile-ID: returns personal catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given idspaces or catalogs."
                    },
                    {
                        "name": "text",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Text that contains artist names."
                    },
                    {
                        "name": "max_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum familiarity for returned artists (0.0 < familiarity < 1.0). Default: 1.0"
                    },
                    {
                        "name": "min_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum familiarity for returned artists (0.0 < familiarity < 1.0). Default: 0.0"
                    },
                    {
                        "name": "max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss for returned artists (0.0 < hotttnesss < 1.0). Default: 1.0"
                    },
                    {
                        "name": "min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss for returned artists (0.0 < hotttnesss < 1.0). Default: 0.0"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "object",
                        "description": "Specified the sort order of the results."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/songs": {
            "get": {
                "description": "Get a list of songs created by an artist.",
                "operationId": "Get_artist.songs_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/similar": {
            "get": {
                "description": "Return similar artists given one or more artists for comparison.",
                "operationId": "Get_artist.similar_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "min_results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "Indicates the minimum number of results to be returned regardless of constraints. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned with each artist. Bucket:\nbiographies: returns up to the 15 most recent biographies found on the web related to the artist\nblogs: returns up to the 15 most recent blogs found on the web related to the artist\ndoc_counts(beta): returns document counts for each of the various artist document types\nfamiliarity: returns the familiarity for the artist\nhotttnesss: returns the hotttnesss for the artist\nimages: returns up to the 15 most recent images found on the web related to the artist\nnews: returns up to the 15 most recent news articles found on the web related to the artist\nreviews: returns up to the 15 most recent reviews found on the web related to the artist\nsongs(beta): returns up to the 15 hotttest songs for the artist\nurls: returns links to this artist's pages on various sites\nvideo: returns up to the 15 most recent videos found on the web related to the artist\nyears_active(beta): returns years active information for the artist\nid:rosetta-catalog: returns catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Taste-Profile-ID: returns personal catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    },
                    {
                        "name": "max_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum familiarity for returned artists (0.0 < familiarity < 1.0). Default: 1.0"
                    },
                    {
                        "name": "min_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum familiarity for returned artists (0.0 < familiarity < 1.0). Default: 0.0"
                    },
                    {
                        "name": "max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss for returned artists (0.0 < hotttnesss < 1.0). Default: 1.0"
                    },
                    {
                        "name": "min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss for returned artists (0.0 < hotttnesss < 1.0). Default: 0.0"
                    },
                    {
                        "name": "artist_start_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_start_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "reverse",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If true, return artists that are disimilar to the seeds."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If true, limit the results to any of the given idspaces or catalogs."
                    },
                    {
                        "name": "seed_catalog",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only give similars to those in a catalog or catalogs, An Echo Nest artist catalog identifier. Repeating: up to 5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/suggest": {
            "get": {
                "description": "Suggest artists based upon partial names.",
                "operationId": "Get_artist.suggest_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 10.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 15"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/terms": {
            "get": {
                "description": "Get a list of most descriptive terms for an artist.",
                "operationId": "Get_artist.terms_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "weight",
                            "frequency"
                        ],
                        "default": "frequency",
                        "type": "string",
                        "description": "Sort terms based upon weight or frequency."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/top_hottt": {
            "get": {
                "description": "Return a list of the top hottt artists.",
                "operationId": "Get_artist.top_hottt_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned with each artist. Bucket:\nbiographies: returns up to the 15 most recent biographies found on the web related to the artist\nblogs: returns up to the 15 most recent blogs found on the web related to the artist\ndoc_counts(beta): returns document counts for each of the various artist document types\nfamiliarity: returns the familiarity for the artist\nhotttnesss: returns the hotttnesss for the artist\nimages: returns up to the 15 most recent images found on the web related to the artist\nnews: returns up to the 15 most recent news articles found on the web related to the artist\nreviews: returns up to the 15 most recent reviews found on the web related to the artist\nsongs(beta): returns up to the 15 hotttest songs for the artist\nurls: returns links to this artist's pages on various sites\nvideo: returns up to the 15 most recent videos found on the web related to the artist\nyears_active(beta): returns years active information for the artist\nid:rosetta-catalog: returns catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Taste-Profile-ID: returns personal catalog specific information about the artist for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "If true artists will be limited to those that appear in any of the catalogs specified by the id: bucket."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/top_terms": {
            "get": {
                "description": "Returns a list of the overall top terms.",
                "operationId": "Get_artist.top_terms_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/twitter": {
            "get": {
                "description": "Gets the twitter handle for an artist.",
                "operationId": "Get_artist.twitter_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/urls": {
            "get": {
                "description": "Get links to the artist's official site, MusicBrainz site, MySpace site, Wikipedia article, Amazon list, and iTunes page.",
                "operationId": "Get_artist.urls_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/artist/video": {
            "get": {
                "description": "Get a list of video documents found on the web related to an artist.",
                "operationId": "Get_artist.video_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/song/search": {
            "get": {
                "description": "Search for songs given different query types.",
                "operationId": "Get_song.search_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the results."
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The title of the song."
                    },
                    {
                        "name": "artist",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the primary artist."
                    },
                    {
                        "name": "combined",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Query both artist and title fields."
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A description of the artist."
                    },
                    {
                        "name": "style",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A musical style or genre like rock, jazz, or funky."
                    },
                    {
                        "name": "mood",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A mood like happy or sad."
                    },
                    {
                        "name": "rank_type",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "relevance",
                            "familiarity"
                        ],
                        "default": "relevance",
                        "type": "string",
                        "description": "For search by description, style or mood indicates whether results should be ranked by query relevance or by artist familiarity"
                    },
                    {
                        "name": "artist_id",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The artist ID. An Echo Nest ID or a Rosetta ID (See http://developer.echonest.com/docs/v4/index.html#rosetta)."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "max_tempo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 500.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum tempo for the song. 0.0 < tempo < 500.0 (BPM)"
                    },
                    {
                        "name": "min_tempo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimun tempo for the song. 0.0 < tempo < 500.0 (BPM)"
                    },
                    {
                        "name": "max_duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 3600.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum duration of any song. 0.0 < duration < 3600.0 (seconds)"
                    },
                    {
                        "name": "min_duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimun duration of any song. 0.0 < duration < 3600.0 (seconds)"
                    },
                    {
                        "name": "max_loudness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 100.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum loudness of any song. -100.0 < loudness < 100.0 (dB)"
                    },
                    {
                        "name": "min_loudness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -100.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum loudness of any song. -100.0 < loudness < 100.0 (dB)"
                    },
                    {
                        "name": "artist_max_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum familiarity of any song. 0.0 < familiarity < 1.0"
                    },
                    {
                        "name": "artist_min_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum familiarity of any song. 0.0 < familiarity < 1.0"
                    },
                    {
                        "name": "artist_start_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_start_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "song_max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss of any song. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "song_min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss of any song. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "artist_max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss of any song's artist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "artist_min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss of any song's artist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "max_longitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 180.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum longitude of the primary artist location. -180.0 < longitude < 180.0"
                    },
                    {
                        "name": "min_longitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -180.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum longitude of the primary artist location. -180.0 < longitude < 180.0"
                    },
                    {
                        "name": "max_latitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 90.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum latitude of the primary artist location. -90.0 < latitude < 90.0"
                    },
                    {
                        "name": "min_latitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -90.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum latitude of the primary artist location. -90.0 < latitude < 90.0"
                    },
                    {
                        "name": "max_danceability",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum danceability of any song. 0.0 < danceability < 1.0"
                    },
                    {
                        "name": "min_danceability",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum danceability of any song. 0.0 < danceability < 1.0"
                    },
                    {
                        "name": "max_energy",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum energy of any song. 0.0 < energy < 1.0"
                    },
                    {
                        "name": "min_energy",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum energy of any song. 0.0 < energy < 1.0"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_0",
                            "Value_1"
                        ],
                        "type": "integer",
                        "description": "The mode of songs. (minor, major) 0, 1"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_0",
                            "Value_1",
                            "Value_2",
                            "Value_3",
                            "Value_4",
                            "Value_5",
                            "Value_6",
                            "Value_7",
                            "Value_8",
                            "Value_8",
                            "Value_9",
                            "Value_10",
                            "Value_11"
                        ],
                        "type": "integer",
                        "description": "The key of songs in the playlist. (c, c-sharp, d, e-flat, e, f, f-sharp, g, a-flat, a, b-flat, b) 0 - 11"
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned for each song. If specifying the \"tracks\" bucket, a bucket with an id space must also be specified. See http://developer.echonest.com/docs/v4/index.html#rosetta for details on retrieving information associated with a particular catalog. Bucket:\naudio_summary: returns summary audio parameters for the song\nartist_familiarity: returns the familiarity for the song's artist\nartist_hotttnesss: returns the hotttnesss for the song's artist\nartist_location: returns information about the location of origin for the song's artist\nsong_hotttnesss: returns the hotttnesss of the song\ntracks: returns detailed track information for the song. You must also specify a Rosetta id space such as 7digital-US.\nid:rosetta-catalog: returns catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Personal-Catalog-ID: returns personal catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "object",
                        "description": "Indicates how the songs results should be ordered."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given idspaces or catalogs."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/song/profile": {
            "get": {
                "description": "Get info about songs given a list of ids.",
                "operationId": "Get_song.profile_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the results."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned for each song. If specifying the \"tracks\" bucket, a bucket with an id space must also be specified. Bucket:\naudio_summary: returns summary audio parameters for the song\nartist_familiarity: returns the familiarity for the song's artist\nartist_hotttnesss: returns the hotttnesss for the song's artist\nartist_location: returns information about the location of origin for the song's artist\nsong_hotttnesss: returns the hotttnesss of the song\ntracks: returns detailed track information for the song. You must also specify a Rosetta id space such as 7digital-US.\nid:rosetta-catalog: returns catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Personal-Catalog-ID: returns personal catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given idspaces or catalogs."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/song/identify": {
            "get": {
                "description": "Identifies a song given an Echoprint or Echo Nest Musical Fingerprint hash codes.",
                "operationId": "Get_song.identify.get_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The FP hashcodes for the track."
                    },
                    {
                        "name": "artist",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the artist from the ID3 tag."
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The title of the track from the ID3 tag."
                    },
                    {
                        "name": "release",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The title of the album/release from the ID3 tag."
                    },
                    {
                        "name": "duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "The length of time of the track, in seconds."
                    },
                    {
                        "name": "genre",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "integer",
                        "format": "int32",
                        "description": "The genre from the ID3 tag."
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Version of codegen used to generate the code. Currently supported versions are 3.15 for ENMFP and 4.11 for Echoprint. If not specified, version 3.15 is used. See the section below on Echo Nest Fingerprinting systems to determine which fingerprinting system is best for you."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies which information should be returned for each matching song. Bucket:\naudio_summary: returns summary audio parameters for the song\nartist_familiarity: returns the familiarity for the song's artist\nartist_hotttnesss: returns the hotttnesss for the song's artist\nartist_location: returns information about the location of origin for the song's artist\nsong_hotttnesss: returns the hotttnesss of the song\ntracks: returns detailed track information for the song. You must also specify a Rosetta id space such as 7digital-US.\nid:rosetta-catalog: returns catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Personal-Catalog-ID: returns personal catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Identifies a song given an Echoprint or Echo Nest Musical Fingerprint hash codes. Request with Content-Type \"multipart/form-data\" where all parameters are in the post body and the query is in the \"query\" parameter of the post \"files\".",
                "operationId": "Create_song.identify.post.query_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "multipart/form-data",
                        "type": "string",
                        "description": "Specifies Content Type."
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The JSON query."
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Version of codegen used to generate the code. Currently supported versions are 3.15 for ENMFP and 4.11 for Echoprint. If not specified, version 3.15 is used. See the section below on Echo Nest Fingerprinting systems to determine which fingerprinting system is best for you."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies which information should be returned for each matching song. Bucket:\naudio_summary: returns summary audio parameters for the song\nartist_familiarity: returns the familiarity for the song's artist\nartist_hotttnesss: returns the hotttnesss for the song's artist\nartist_location: returns information about the location of origin for the song's artist\nsong_hotttnesss: returns the hotttnesss of the song\ntracks: returns detailed track information for the song. You must also specify a Rosetta id space such as 7digital-US.\nid:rosetta-catalog: returns catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details.\nid:Personal-Catalog-ID: returns personal catalog specific information about the song for the given catalog. See http://developer.echonest.com/docs/v4/index.html#rosetta for details."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/track/analyze": {
            "post": {
                "description": "Analyze a previously uploaded track with the latest version of the analyzer.",
                "operationId": "Create_track.analyze_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "multipart/form-data",
                        "type": "string",
                        "description": "Specifies Content Type."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": true,
                        "type": "boolean",
                        "description": "If true wait for the analysis to be completed."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "Indicates which track data should be returned (only valid if wait is true)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/track/profile": {
            "get": {
                "description": "Get info about tracks given an id or md5.",
                "operationId": "Get_track.profile_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": true,
                        "type": "boolean",
                        "description": "If true wait for the analysis to be completed."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "The type of track data that should be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/track/upload": {
            "post": {
                "description": "Upload a track to The Echo Nest's analyzer for analysis. Request with Content-Type \"multipart/form-data\" where all parameters are in the post body and the track is in the \"track\" section of the post \"files\".",
                "operationId": "Create_track.upload.post.query_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "multipart/form-data",
                        "type": "string",
                        "description": "Specifies Content Type."
                    },
                    {
                        "name": "track",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The track data."
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A url to an audio file."
                    },
                    {
                        "name": "filetype",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Required if uploading a local file. The type of audio file to be analyzed."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": true,
                        "type": "boolean",
                        "description": "If true wait for the analysis to be completed."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "The type of track data that should be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/playlist/basic": {
            "get": {
                "description": "Returns a basic playlist.",
                "operationId": "Get_playlist.basic_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies which rosetta id space info should be returned."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given rosetta id space."
                    },
                    {
                        "name": "dmca",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "If true the playlist delivered will meet the DMCA rules."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/playlist/static": {
            "get": {
                "description": "Returns a static playlist.",
                "operationId": "Get_playlist.static_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": "artist",
                        "type": "object",
                        "description": "The type of the playlist to be generated."
                    },
                    {
                        "name": "artist_pick",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The artist_pick parameter is used to determine how songs are picked for each artist in artist-type playlists. If the asc or desc suffix is ommitted, artist_pick defaults to descending."
                    },
                    {
                        "name": "variety",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.3,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum variety of artists to be represented in the playlist. A higher number will allow for more variety in the artists. 0 - 1 (default = 0.3)"
                    },
                    {
                        "name": "distribution",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "focused",
                            "wandering"
                        ],
                        "default": "focused",
                        "type": "string",
                        "description": "Controls the distribution of artists in the playlist. A focused distribution yields a playlist of songs that are tightly clustered around the seeds, whereas a wandering distribution yields a playlist from a broader range of artists."
                    },
                    {
                        "name": "adventurousness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.2,
                        "type": "integer",
                        "format": "int32",
                        "description": "Controls the trade between known music and unknown music. A value of 0 means no adventurousness, only known and preferred music will be played. A value of 1 means high adventurousness, mostly unknown music will be played. A value of auto indicates that the adventurousness should be automatically determined based upon the taste profile of the user. This parameter only applies to catalog and catalog-radio type playlists.0 - 1 (default = 0.2)"
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired number of songs in the playlist. 0 < results < 100"
                    },
                    {
                        "name": "max_tempo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 500.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum tempo for any included songs. 0.0 < tempo < 500.0 (BPM)"
                    },
                    {
                        "name": "min_tempo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimun tempo for any included songs. 0.0 < tempo < 500.0 (BPM)"
                    },
                    {
                        "name": "max_duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 3600.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum duration of any song on the playlist. 0.0 < duration < 3600.0 (seconds)"
                    },
                    {
                        "name": "min_duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimun duration of any song on the playlist. 0.0 < duration < 3600.0 (seconds)"
                    },
                    {
                        "name": "max_loudness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 100.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum loudness of any song on the playlist. -100.0 < loudness < 100.0 (dB)"
                    },
                    {
                        "name": "min_loudness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -100.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum loudness of any song on the playlist. -100.0 < loudness < 100.0 (dB)"
                    },
                    {
                        "name": "max_danceability",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum danceability of any song. 0.0 < danceability < 1.0"
                    },
                    {
                        "name": "min_danceability",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum danceability of any song. 0.0 < danceability < 1.0"
                    },
                    {
                        "name": "max_energy",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum energy of any song. 0.0 < energy < 1.0"
                    },
                    {
                        "name": "min_energy",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum energy of any song. 0.0 < energy < 1.0"
                    },
                    {
                        "name": "artist_max_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum artist familiarity for songs in the playlist. 0.0 < familiarity < 1.0"
                    },
                    {
                        "name": "artist_min_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum artist familiarity for songs in the playlist. 0.0 < familiarity < 1.0"
                    },
                    {
                        "name": "artist_max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum artist hotttness for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "artist_min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum artist hotttness for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "artist_start_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_start_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "song_max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "song_min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "max_longitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 180.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum longitude for the location of artists in the playlist. -180.0 < longitude < 180.0"
                    },
                    {
                        "name": "min_longitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -180.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum longitude for the location of artists in the playlist. -180.0 < longitude < 180.0"
                    },
                    {
                        "name": "max_latitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 90.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum latitude for the location of artists in the playlist. -90.0 < latitude < 90.0"
                    },
                    {
                        "name": "min_latitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -90.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum latitude for the location of artists in the playlist. -90.0 < latitude < 90.0"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_0",
                            "Value_1"
                        ],
                        "type": "integer",
                        "description": "The mode of songs in the playlist. (minor, major) 0, 1"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_0",
                            "Value_1",
                            "Value_2",
                            "Value_3",
                            "Value_4",
                            "Value_5",
                            "Value_6",
                            "Value_7",
                            "Value_8",
                            "Value_8",
                            "Value_9",
                            "Value_10",
                            "Value_11"
                        ],
                        "type": "integer",
                        "description": "The key of songs in the playlist. (c, c-sharp, d, e-flat, e, f, f-sharp, g, a-flat, a, b-flat, b) 0 - 11"
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned in the playlist (for json and xml types only)."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "object",
                        "description": "Indicates how the songs should be ordered in the playlist."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given idspaces or catalogs."
                    },
                    {
                        "name": "dmca",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "If true the playlist delivered will meet the DMCA rules."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/playlist/dynamic": {
            "get": {
                "description": "To get the next song in the playlist.",
                "operationId": "Get_playlist.dynamic.getnextsong_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "artist",
                        "type": "object",
                        "description": "The type of the playlist to be generated."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "artist_pick",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The artist_pick parameter is used to determine how songs are picked for each artist in artist-type playlists. If the asc or desc suffix is ommitted, artist_pick defaults to descending."
                    },
                    {
                        "name": "variety",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.3,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum variety of artists to be represented in the playlist. A higher number will allow for more variety in the artists. 0 - 1 (default = 0.3)"
                    },
                    {
                        "name": "distribution",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "focused",
                            "wandering"
                        ],
                        "default": "focused",
                        "type": "string",
                        "description": "Controls the distribution of artists in the playlist. A focused distribution yields a playlist of songs that are tightly clustered around the seeds, whereas a wandering distribution yields a playlist from a broader range of artists."
                    },
                    {
                        "name": "adventurousness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.2,
                        "type": "integer",
                        "format": "int32",
                        "description": "Controls the trade between known music and unknown music. A value of 0 means no adventurousness, only known and preferred music will be played. A value of 1 means high adventurousness, mostly unknown music will be played. A value of auto indicates that the adventurousness should be automatically determined based upon the taste profile of the user. This parameter only applies to catalog and catalog-radio type playlists.0 - 1 (default = 0.2)"
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired number of songs in the playlist. 0 < results < 100"
                    },
                    {
                        "name": "max_tempo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 500.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum tempo for any included songs. 0.0 < tempo < 500.0 (BPM)"
                    },
                    {
                        "name": "min_tempo",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimun tempo for any included songs. 0.0 < tempo < 500.0 (BPM)"
                    },
                    {
                        "name": "max_duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 3600.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum duration of any song on the playlist. 0.0 < duration < 3600.0 (seconds)"
                    },
                    {
                        "name": "min_duration",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimun duration of any song on the playlist. 0.0 < duration < 3600.0 (seconds)"
                    },
                    {
                        "name": "max_loudness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 100.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum loudness of any song on the playlist. -100.0 < loudness < 100.0 (dB)"
                    },
                    {
                        "name": "min_loudness",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -100.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum loudness of any song on the playlist. -100.0 < loudness < 100.0 (dB)"
                    },
                    {
                        "name": "max_danceability",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum danceability of any song. 0.0 < danceability < 1.0"
                    },
                    {
                        "name": "min_danceability",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum danceability of any song. 0.0 < danceability < 1.0"
                    },
                    {
                        "name": "max_energy",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum energy of any song. 0.0 < energy < 1.0"
                    },
                    {
                        "name": "min_energy",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum energy of any song. 0.0 < energy < 1.0"
                    },
                    {
                        "name": "artist_max_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum artist familiarity for songs in the playlist. 0.0 < familiarity < 1.0"
                    },
                    {
                        "name": "artist_min_familiarity",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum artist familiarity for songs in the playlist. 0.0 < familiarity < 1.0"
                    },
                    {
                        "name": "artist_max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum artist hotttness for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "artist_min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum artist hotttness for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "artist_start_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_start_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have an earliest start year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_before",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year before the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "artist_end_year_after",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Matches artists that have a latest end year after the given value. Examples: 1970, 2011, present"
                    },
                    {
                        "name": "song_max_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 1.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum hotttnesss for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "song_min_hotttnesss",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum hotttnesss for songs in the playlist. 0.0 < hotttnesss < 1.0"
                    },
                    {
                        "name": "max_longitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 180.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum longitude for the location of artists in the playlist. -180.0 < longitude < 180.0"
                    },
                    {
                        "name": "min_longitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -180.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum longitude for the location of artists in the playlist. -180.0 < longitude < 180.0"
                    },
                    {
                        "name": "max_latitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 90.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The maximum latitude for the location of artists in the playlist. -90.0 < latitude < 90.0"
                    },
                    {
                        "name": "min_latitude",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": -90.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The minimum latitude for the location of artists in the playlist. -90.0 < latitude < 90.0"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_0",
                            "Value_1"
                        ],
                        "type": "integer",
                        "description": "The mode of songs in the playlist. (minor, major) 0, 1"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_0",
                            "Value_1",
                            "Value_2",
                            "Value_3",
                            "Value_4",
                            "Value_5",
                            "Value_6",
                            "Value_7",
                            "Value_8",
                            "Value_8",
                            "Value_9",
                            "Value_10",
                            "Value_11"
                        ],
                        "type": "integer",
                        "description": "The key of songs in the playlist. (c, c-sharp, d, e-flat, e, f, f-sharp, g, a-flat, a, b-flat, b) 0 - 11"
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned in the playlist (for json and xml types only)."
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "object",
                        "description": "Indicates how the songs should be ordered in the playlist."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If 'true', limit the results to any of the given idspaces or catalogs."
                    },
                    {
                        "name": "session_id",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of the current playlist session. To start a new session, call playlist/dynamic with no session ID."
                    },
                    {
                        "name": "dmca",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "If true the playlist delivered will meet the DMCA rules."
                    },
                    {
                        "name": "rating",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "Value_1",
                            "Value_2",
                            "Value_3",
                            "Value_4",
                            "Value_5"
                        ],
                        "type": "integer",
                        "description": "The user rating for the previous track. 5 is the highest rating, 1 is the lowest rating. Some playlist algorithms will adapt playlists based upon these ratings."
                    },
                    {
                        "name": "chain_xspf",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "boolean",
                        "description": "If true, an additional 'track' is added to the end XSPF playlist that is a URL to the next XSPF in the chain."
                    },
                    {
                        "name": "steer",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "tempo",
                            "loudness",
                            "danceability",
                            "energy",
                            "song_hotttnesss",
                            "artist_hotttnesss",
                            "artist_familiarity"
                        ],
                        "type": "string",
                        "items": {},
                        "description": "Using the previously played track as the basis, make all future tracks some multiplier of the selected attribute(s). required terms use a multiplier in a boost-like format - e.g. energy^.5 to make all future songs have half the energy of the previously played song, or loudness^1.3 to add 30%."
                    },
                    {
                        "name": "steer_description",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Using the current playlist as a basis, add or remove terms relating to the artists and songs to be played. Applying a term again will overwrite the previous term, including boost. Boosting with a \"0\" will remove a term from the list of qualifiers. Using 'description' rather than 'steer_description' will clear the description list and restart the playlist session with the new term."
                    },
                    {
                        "name": "steer_style",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Using the current playlist as a basis, add or remove terms relating to the style of artists and songs to be played. Applying a style again will overwrite the previous style, including boost. Boosting with a \"0\" will remove a term from the list of qualifiers. Using 'style' rather than 'steer_style' will clear the style list and restart the playlist session with the new style."
                    },
                    {
                        "name": "steer_mood",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Using the current playlist as a basis, add or remove terms relating to the mood of artists and songs to be played. Applying a mood again will overwrite the previous mood, including boost. Boosting with a \"0\" will remove a mood from the list of moods. Using 'mood' rather than 'steer_mood' will clear the mood list and restart the playlist session with the new mood."
                    },
                    {
                        "name": "ban",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "song",
                            "artist"
                        ],
                        "type": "string",
                        "items": {},
                        "description": "Banning will prevent the song/all songs by that artist from appearing again in the current playlist session."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/playlist/session_info": {
            "get": {
                "description": "Returns state information for dynamic playlists.",
                "operationId": "Get_playlist.session_info_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The id of the current playlist session. To start a new session, call playlist/dynamic with no session ID."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/create": {
            "post": {
                "description": "Creates a catalog.",
                "operationId": "Create_catalog.create_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "multipart/form-data",
                        "type": "string",
                        "description": "Specifies Content Type."
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the catalog."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "enum": [
                            "song",
                            "artist"
                        ],
                        "type": "string",
                        "description": "The type of the catalog."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/update": {
            "post": {
                "description": "Updates (adds or deletes) items from a catalog.",
                "operationId": "Create_catalog.update_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the catalog."
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The data to be uploaded."
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": "json",
                        "type": "string",
                        "description": "The type of data to be uploaded."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/status": {
            "get": {
                "description": "Checks the status of a catalog update.",
                "operationId": "Get_catalog.status_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ticket to check (returned by upload or update)."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/profile": {
            "get": {
                "description": "Get basic information on a catalog.",
                "operationId": "Get_catalog.profile_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/read": {
            "get": {
                "description": "Returns data stored in the catalog.",
                "operationId": "Get_catalog.read_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the catalog."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "item_id",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The item id for the item in the catalog."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indicates what data should be returned for each item. \nFor song items: audio_summary, artist_familiarity, artist_hotttnesss, artist_location, song_hotttnesss, tracks, id:Rosetta-space \nFor artist items: biographies, blogs, doc_counts, familiarity, hotttnesss, images, news, reviews, songs, terms, urls, video, years_active, id:Rosetta-space"
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 30.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired number of results returned."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/feed": {
            "get": {
                "description": "Returns feeds based on the artists in a taste profile.",
                "operationId": "Get_catalog.feed_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the catalog."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "bucket",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": "news",
                        "type": "Array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Indicates what type of feed items should be returned for each artist in the catalog."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 25.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired number of results returned."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Limit the items to those that have occurred since the given date. If supplied must be in date format YYYY-mm-dd"
                    },
                    {
                        "name": "high_relevance",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": false,
                        "type": "boolean",
                        "description": "If true only items that are highly relevant for this artist will be returned. Currently only news items are filtered for high relevance."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/delete": {
            "post": {
                "description": "Deletes the entire catalog.",
                "operationId": "Create_catalog.delete_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Content-Type",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "default": "multipart/form-data",
                        "type": "string",
                        "description": "Specifies Content Type."
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The ID of the catalog."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/catalog/list": {
            "get": {
                "description": "Returns a list of all catalogs created on this key.",
                "operationId": "Get_catalog.list_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 25.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired number of results returned."
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 0.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sandbox/list": {
            "get": {
                "description": "Lists detailed information about each asset in the sandbox.",
                "operationId": "Get_sandbox.list_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sandbox",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the sandbox."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/sandbox/access": {
            "get": {
                "description": "Gets access to the listed assets.",
                "operationId": "Get_sandbox.access_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "sandbox",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The name of the sandbox."
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "Array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID of the asset."
                    },
                    {
                        "name": "oauth_nonce",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "A random string of characters that differs from call to call and is never repeated in a 10 minute window."
                    },
                    {
                        "name": "oauth_timestamp",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The number of seconds elapsed since midnight, 1 January 1970. Be sure this is within ten minutes of the real time. You can get the current timestamp that the Echo Nest API is using by via the oauth/timestamp method."
                    },
                    {
                        "name": "oauth_signature_method",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "Algorithm used to generate the signature. Supported methods are HMAC-SHA1."
                    },
                    {
                        "name": "oauth_consumer_key",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The consumer key used to sign calls."
                    },
                    {
                        "name": "oauth_signature",
                        "in": "query",
                        "required": true,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The cryptographic signature for the method call. Calls are signed using your consumer key, your shared secret, the HTTP method and an encoded version of the base string of the URL."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of results desired. 0 < results < 100"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "default": 15.0,
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired index of the first result returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/oauth/timestamp": {
            "get": {
                "description": "Returns the current time of The Echo Nest API server. This time can be used to synchronize the local time with The Echo Nest allowing you to set a proper timestamp used generate authenticated requests to the API.",
                "operationId": "Get_oauth.timestamp_",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "enum": [
                            "json",
                            "xml",
                            "jsonp"
                        ],
                        "default": "json",
                        "type": "string",
                        "description": "The format of the response."
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "required": false,
                        "x-is-map": false,
                        "type": "string",
                        "description": "The callback function for JSONP requests. Required if format is jsonp."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gain access to billions of data points about music, including artist info, taste profiles, playlists and more.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "format": {
            "title": "format",
            "type": "string",
            "enum": [
                "json",
                "xml",
                "jsonp"
            ]
        },
        "type": {
            "title": "type",
            "type": "string",
            "enum": [
                "overall",
                "social",
                "reviews",
                "mainstream"
            ]
        },
        "type2": {
            "title": "type2",
            "type": "string",
            "enum": [
                "style",
                "mood"
            ]
        },
        "rank_type": {
            "title": "rank_type",
            "type": "string",
            "enum": [
                "relevance",
                "familiarity"
            ]
        },
        "sort": {
            "title": "sort",
            "type": "string",
            "enum": [
                "weight",
                "frequency"
            ]
        },
        "format5": {
            "title": "format5",
            "type": "string",
            "enum": [
                "json",
                "xml"
            ]
        },
        "mode": {
            "title": "mode",
            "type": "integer",
            "format": "int32",
            "enum": [
                "Value_0",
                "Value_1"
            ]
        },
        "key": {
            "title": "key",
            "type": "integer",
            "format": "int32",
            "enum": [
                "Value_0",
                "Value_1",
                "Value_2",
                "Value_3",
                "Value_4",
                "Value_5",
                "Value_6",
                "Value_7",
                "Value_8",
                "Value_8",
                "Value_9",
                "Value_10",
                "Value_11"
            ]
        },
        "distribution": {
            "title": "distribution",
            "type": "string",
            "enum": [
                "focused",
                "wandering"
            ]
        },
        "rating": {
            "title": "rating",
            "type": "integer",
            "format": "int32",
            "enum": [
                "Value_1",
                "Value_2",
                "Value_3",
                "Value_4",
                "Value_5"
            ]
        },
        "steer": {
            "title": "steer",
            "type": "string",
            "enum": [
                "tempo",
                "loudness",
                "danceability",
                "energy",
                "song_hotttnesss",
                "artist_hotttnesss",
                "artist_familiarity"
            ]
        },
        "ban": {
            "title": "ban",
            "type": "string",
            "enum": [
                "song",
                "artist"
            ]
        }
    }
}
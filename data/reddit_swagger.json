{
    "swagger": "2.0", 
    "info": {
        "version": "1.0", 
        "description": "Reddit RESTful API", 
        "title": "Reddit API"
    }, 
    "host": "www.reddit.com", 
    "basePath": "/", 
    "scheme": [
        "http"
    ], 
    "produces": [
        "application/json"
    ], 
    "paths": {
        "/api/v1/me": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Returns the identity of the user currently authenticated via OAuth.", 
                "summary": "Returns the identity of the user currently authenticated via OAuth.", 
                "security": [], 
                "operationId": "account"
            }
        }, 
        "/api/v1/me/prefs": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "{  &quot;beta&quot;: boolean value,  &quot;clickgadget&quot;: boolean value,  &quot;collapse_read_messages&quot;: boolean value,  &quot;compress&quot;: boolean value,  &quot;creddit_autorenew&quot;: boolean value,  &quot;default_comment_sort&quot;: one of (`confidence`, `old`, `top`, `qa`, `controversial`, `new`),  &quot;domain_details&quot;: boolean value,  &quot;email_messages&quot;: boolean value,  &quot;enable_default_themes&quot;: boolean value,  &quot;hide_ads&quot;: boolean value,  &quot;hide_downs&quot;: boolean value,  &quot;hide_from_robots&quot;: boolean value,  &quot;hide_locationbar&quot;: boolean value,  &quot;hide_ups&quot;: boolean value,  &quot;highlight_controversial&quot;: boolean value,  &quot;highlight_new_comments&quot;: boolean value,  &quot;ignore_suggested_sort&quot;: boolean value,  &quot;label_nsfw&quot;: boolean value,  &quot;lang&quot;: a valid IETF language tag (underscore separated),  &quot;legacy_search&quot;: boolean value,  &quot;mark_messages_read&quot;: boolean value,  &quot;media&quot;: one of (`on`, `off`, `subreddit`),  &quot;min_comment_score&quot;: an integer between -100 and 100,  &quot;min_link_score&quot;: an integer between -100 and 100,  &quot;monitor_mentions&quot;: boolean value,  &quot;newwindow&quot;: boolean value,  &quot;no_profanity&quot;: boolean value,  &quot;num_comments&quot;: an integer between 1 and 500,  &quot;numsites&quot;: an integer between 1 and 100,  &quot;organic&quot;: boolean value,  &quot;other_theme&quot;: subreddit name,  &quot;over_18&quot;: boolean value,  &quot;private_feeds&quot;: boolean value,  &quot;public_votes&quot;: boolean value,  &quot;research&quot;: boolean value,  &quot;show_flair&quot;: boolean value,  &quot;show_gold_expiration&quot;: boolean value,  &quot;show_link_flair&quot;: boolean value,  &quot;show_promote&quot;: boolean value,  &quot;show_stylesheets&quot;: boolean value,  &quot;show_trending&quot;: boolean value,  &quot;store_visits&quot;: boolean value,  &quot;theme_selector&quot;: subreddit name,  &quot;threaded_messages&quot;: boolean value,  &quot;threaded_modmail&quot;: boolean value,  &quot;use_global_defaults&quot;: boolean value,}", 
                        "type": "string", 
                        "name": "This endpoint expects JSON data of this format", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "", 
                "summary": "", 
                "security": [], 
                "operationId": "account"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of items from this set:threaded_messageshide_downsemail_messagesshow_link_flaircreddit_autorenewshow_trendingprivate_feedsmonitor_mentionsresearchignore_suggested_sortmediaclickgadgetuse_global_defaultslabel_nsfwdomain_detailsshow_stylesheetshighlight_controversialno_profanitydefault_theme_srlanghide_upshide_from_robotscompressstore_visitsthreaded_modmailbetaother_themeshow_gold_expirationover_18enable_default_themesshow_promotemin_comment_scorepublic_votesorganiccollapse_read_messagesshow_flairmark_messages_readhide_adsmin_link_scorenewwindownumsiteslegacy_searchnum_commentshighlight_new_commentsdefault_comment_sorthide_locationbar", 
                        "type": "string", 
                        "name": "fields", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return the preference settings of the logged in user", 
                "summary": "Return the preference settings of the logged in user", 
                "security": [], 
                "operationId": "account"
            }
        }, 
        "/api/v1/me/karma": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Return a breakdown of subreddit karma.", 
                "summary": "Return a breakdown of subreddit karma.", 
                "security": [], 
                "operationId": "account"
            }
        }, 
        "/api/v1/me/trophies": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Return a list of trophies for the current user.", 
                "summary": "Return a list of trophies for the current user.", 
                "security": [], 
                "operationId": "account"
            }
        }, 
        "/prefs/where": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "account"
            }
        }, 
        "/captcha/iden": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Request a CAPTCHA image given an iden.", 
                "summary": "Request a CAPTCHA image given an iden.", 
                "security": [], 
                "operationId": "captcha"
            }
        }, 
        "/api/new_captcha": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Responds with an iden of a new CAPTCHA.", 
                "summary": "Responds with an iden of a new CAPTCHA.", 
                "security": [], 
                "operationId": "captcha"
            }
        }, 
        "/api/needs_captcha": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Check whether CAPTCHAs are needed for API methods that define then&quot;captcha&quot; and &quot;iden&quot; parameters.", 
                "summary": "Check whether CAPTCHAs are needed for API methods that define then&quot;captcha&quot; and &quot;iden&quot; parameters.", 
                "security": [], 
                "operationId": "captcha"
            }
        }, 
        "{/r/subreddit}/api/flairtemplate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid subreddit image name", 
                        "type": "string", 
                        "name": "css_class", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "flair_template_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (USER_FLAIR, LINK_FLAIR)", 
                        "type": "string", 
                        "name": "flair_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 64 characters", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "text_editable", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/flaircsv": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "comma-seperated flair information", 
                        "type": "string", 
                        "name": "flair_csv", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Change the flair of multiple users in the same subreddit with ansingle API call.", 
                "summary": "Change the flair of multiple users in the same subreddit with ansingle API call.", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/flair": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid subreddit image name", 
                        "type": "string", 
                        "name": "css_class", 
                        "in": "query"
                    }, 
                    {
                        "description": "a fullname of a link", 
                        "type": "string", 
                        "name": "link", 
                        "in": "query"
                    }, 
                    {
                        "description": "a user by name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 64 characters", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/flairconfig": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "flair_enabled", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (left, right)", 
                        "type": "string", 
                        "name": "flair_position", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "flair_self_assign_enabled", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (`,left,right`)", 
                        "type": "string", 
                        "name": "link_flair_position", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "link_flair_self_assign_enabled", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/deleteflair": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a user by name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/flairselector": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a fullname of a link", 
                        "type": "string", 
                        "name": "link", 
                        "in": "query"
                    }, 
                    {
                        "description": "a user by name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return information about a users&#39;s flair options.", 
                "summary": "Return information about a users&#39;s flair options.", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/clearflairtemplates": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (USER_FLAIR, LINK_FLAIR)", 
                        "type": "string", 
                        "name": "flair_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/setflairenabled": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "flair_enabled", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/selectflair": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "flair_template_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a fullname of a link", 
                        "type": "string", 
                        "name": "link", 
                        "in": "query"
                    }, 
                    {
                        "description": "a user by name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 64 characters", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/flairlist": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 1000)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "a user by name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "{/r/subreddit}/api/deleteflairtemplate": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "flair_template_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "flair"
            }
        }, 
        "/api/v1/gold/give/username": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "an integer between 1 and 36", 
                        "type": "string", 
                        "name": "months", 
                        "in": "query"
                    }, 
                    {
                        "description": "A valid, existing reddit username", 
                        "type": "string", 
                        "name": "username", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "an integer between 1 and 36", 
                "summary": "an integer between 1 and 36", 
                "security": [], 
                "operationId": "reddit-gold"
            }
        }, 
        "/api/v1/gold/gild/fullname": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "fullname", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "fullname of a thing", 
                "summary": "fullname of a thing", 
                "security": [], 
                "operationId": "reddit-gold"
            }
        }, 
        "/api/editusertext": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing created by the user", 
                        "type": "string", 
                        "name": "thing_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Edit the body text of a comment or self-post.", 
                "summary": "Edit the body text of a comment or self-post.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/report": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 100 characters", 
                        "type": "string", 
                        "name": "other_reason", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 100 characters", 
                        "type": "string", 
                        "name": "reason", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 100 characters", 
                        "type": "string", 
                        "name": "site_reason", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "thing_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Report a link, comment or message.", 
                "summary": "Report a link, comment or message.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "{/r/subreddit}/api/info": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of thing fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid URL", 
                        "type": "string", 
                        "name": "url", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return a listing of things specified by their fullnames.", 
                "summary": "Return a listing of things specified by their fullnames.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/saved_categories": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Get a list of categories in which things are currently saved.", 
                "summary": "Get a list of categories in which things are currently saved.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/set_suggested_sort": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (confidence, top, new, hot, controversial, old, random, qa, blank)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Set a suggested sort for a link.", 
                "summary": "Set a suggested sort for a link.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/hide": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of link fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Hide a link.", 
                "summary": "Hide a link.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/set_contest_mode": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "state", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Set or unset &quot;contest mode&quot; for a link&#39;s comments.", 
                "summary": "Set or unset &quot;contest mode&quot; for a link&#39;s comments.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/vote": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "vote direction. one of (1, 0, -1)", 
                        "type": "string", 
                        "name": "dir", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Cast a vote on a thing.", 
                "summary": "Cast a vote on a thing.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/sendreplies": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing created by the user", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "state", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Enable or disable inbox replies for a link or comment.", 
                "summary": "Enable or disable inbox replies for a link or comment.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/marknsfw": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Mark a link NSFW.", 
                "summary": "Mark a link NSFW.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/unsave": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Unsave a link or comment.", 
                "summary": "Unsave a link or comment.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/morechildren": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a comma-delimited list of comment ID36s", 
                        "type": "string", 
                        "name": "children", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) id of the associated MoreChildren object", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "link_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (confidence, top, new, hot, controversial, old, random, qa)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Retrieve additional comments omitted from a base comment tree.", 
                "summary": "Retrieve additional comments omitted from a base comment tree.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/del": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing created by the user", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Delete a Link or Comment.", 
                "summary": "Delete a Link or Comment.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/unmarknsfw": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove the NSFW marking from a link.", 
                "summary": "Remove the NSFW marking from a link.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/store_visits": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of link fullnames", 
                        "type": "string", 
                        "name": "links", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Requires a subscription to reddit gold", 
                "summary": "Requires a subscription to reddit gold", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/save": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a category name", 
                        "type": "string", 
                        "name": "category", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Save a link or comment.", 
                "summary": "Save a link or comment.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/unlock": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a link", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Unlock a link.", 
                "summary": "Unlock a link.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/submit": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the user&#39;s response to the CAPTCHA challenge", 
                        "type": "string", 
                        "name": "captcha", 
                        "in": "query"
                    }, 
                    {
                        "description": "extension used for redirects", 
                        "type": "string", 
                        "name": "extension", 
                        "in": "query"
                    }, 
                    {
                        "description": "the identifier of the CAPTCHA challenge", 
                        "type": "string", 
                        "name": "iden", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (link, self)", 
                        "type": "string", 
                        "name": "kind", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "resubmit", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "sendreplies", 
                        "in": "query"
                    }, 
                    {
                        "description": "name of a subreddit", 
                        "type": "string", 
                        "name": "sr", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "title of the submission. up to 300 characters long", 
                        "type": "string", 
                        "name": "title", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid URL", 
                        "type": "string", 
                        "name": "url", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Submit a link to a subreddit.", 
                "summary": "Submit a link to a subreddit.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/lock": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a link", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Lock a link.", 
                "summary": "Lock a link.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/set_subreddit_sticky": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer between 1 and 2", 
                        "type": "string", 
                        "name": "num", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "state", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Set or unset a Link as the sticky in its subreddit.", 
                "summary": "Set or unset a Link as the sticky in its subreddit.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/unhide": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of link fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Unhide a link.", 
                "summary": "Unhide a link.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "/api/comment": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of parent thing", 
                        "type": "string", 
                        "name": "thing_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Submit a new comment or reply to a message.", 
                "summary": "Submit a new comment or reply to a message.", 
                "security": [], 
                "operationId": "links-amp-comments"
            }
        }, 
        "{/r/subreddit}/sort": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (hour, day, week, month, year, all)", 
                        "type": "string", 
                        "name": "t", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "{/r/subreddit}/hot": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "{/r/subreddit}/random": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "The Serendipity button", 
                "summary": "The Serendipity button", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "/duplicates/article": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "The base 36 ID of a Link", 
                        "type": "string", 
                        "name": "article", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return a list of other submissions of the same URL", 
                "summary": "Return a list of other submissions of the same URL", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "{/r/subreddit}/new": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "{/r/subreddit}/comments/article": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "ID36 of a link", 
                        "type": "string", 
                        "name": "article", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) ID36 of a comment", 
                        "type": "string", 
                        "name": "comment", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer between 0 and 8", 
                        "type": "string", 
                        "name": "context", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) an integer", 
                        "type": "string", 
                        "name": "depth", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) an integer", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "showedits", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "showmore", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (confidence, top, new, hot, controversial, old, random, qa)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get the comment tree for a given Link article.", 
                "summary": "Get the comment tree for a given Link article.", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "/related/article": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "The base 36 ID of a Link", 
                        "type": "string", 
                        "name": "article", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Related page: performs a search using title of article asnthe search query.", 
                "summary": "Related page: performs a search using title of article asnthe search query.", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "/by_id/names": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of link fullnames", 
                        "type": "string", 
                        "name": "names", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get a listing of links by fullname.", 
                "summary": "Get a listing of links by fullname.", 
                "security": [], 
                "operationId": "listings"
            }
        }, 
        "/live/thread/contributors": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Get a list of users that contribute to this thread.", 
                "summary": "Get a list of users that contribute to this thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/report": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (spam, vote-manipulation, personal-information, sexualizing-minors, site-breaking)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Report the thread for violating the rules of reddit.", 
                "summary": "Report the thread for violating the rules of reddit.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/rm_contributor_invite": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a account", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Revoke an outstanding contributor invite.", 
                "summary": "Revoke an outstanding contributor invite.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "body", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Post an update to the thread.", 
                "summary": "Post an update to the thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/create": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "description", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "nsfw", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "resources", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 120 characters", 
                        "type": "string", 
                        "name": "title", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Create a new live thread.", 
                "summary": "Create a new live thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/live/thread/about": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Get some basic information about the live thread.", 
                "summary": "Get some basic information about the live thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/delete_update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the ID of a single update. e.g. LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Delete an update from the thread.", 
                "summary": "Delete an update from the thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/strike_update": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the ID of a single update. e.g. LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Strike (mark incorrect and cross out) the content of an update.", 
                "summary": "Strike (mark incorrect and cross out) the content of an update.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/edit": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "description", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "nsfw", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "resources", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 120 characters", 
                        "type": "string", 
                        "name": "title", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Configure the thread.", 
                "summary": "Configure the thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/close_thread": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Permanently close the thread, disallowing future updates.", 
                "summary": "Permanently close the thread, disallowing future updates.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/leave_contributor": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Abdicate contributorship of the thread.", 
                "summary": "Abdicate contributorship of the thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/live/thread": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the ID of a single update. e.g. LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "the ID of a single update. e.g. LiveUpdate_ff87068e-a126-11e3-9f93-12313b0b3603", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "(internal use only)", 
                        "type": "string", 
                        "name": "is_embed", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "subreddit name", 
                        "type": "string", 
                        "name": "stylesr", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get a list of updates posted in this thread.", 
                "summary": "Get a list of updates posted in this thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/invite_contributor": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "permission description e.g. +update,+edit,-manage", 
                        "type": "string", 
                        "name": "permissions", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (liveupdate_contributor_invite, liveupdate_contributor)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Invite another user to contribute to the thread.", 
                "summary": "Invite another user to contribute to the thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/accept_contributor_invite": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Accept a pending invitation to contribute to the thread.", 
                "summary": "Accept a pending invitation to contribute to the thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/live/thread/discussions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get a list of reddit submissions linking to this thread.", 
                "summary": "Get a list of reddit submissions linking to this thread.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/rm_contributor": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a account", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Revoke another user&#39;s contributorship.", 
                "summary": "Revoke another user&#39;s contributorship.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/live/thread/set_contributor_permissions": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "permission description e.g. +update,+edit,-manage", 
                        "type": "string", 
                        "name": "permissions", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (liveupdate_contributor_invite, liveupdate_contributor)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Change a contributor or contributor invite&#39;s permissions.", 
                "summary": "Change a contributor or contributor invite&#39;s permissions.", 
                "security": [], 
                "operationId": "live-threads"
            }
        }, 
        "/api/v1/scopes": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "(optional) An OAuth2 scope string", 
                        "type": "string", 
                        "name": "scopes", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Retrieve descriptions of reddit&#39;s OAuth2 scopes.", 
                "summary": "Retrieve descriptions of reddit&#39;s OAuth2 scopes.", 
                "security": [], 
                "operationId": "misc"
            }
        }, 
        "{/r/subreddit}/about/location": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "location", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (links, comments)", 
                        "type": "string", 
                        "name": "only", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return a listing of posts relevant to moderators.", 
                "summary": "Return a listing of posts relevant to moderators.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "{/r/subreddit}/stylesheet": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Redirect to the subreddit&#39;s stylesheet if one exists.", 
                "summary": "Redirect to the subreddit&#39;s stylesheet if one exists.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/approve": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Approve a link or comment.", 
                "summary": "Approve a link or comment.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "{/r/subreddit}/about/log": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 500)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) a moderator filter", 
                        "type": "string", 
                        "name": "mod", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (banuser, unbanuser, removelink, approvelink, removecomment, approvecomment, addmoderator, invitemoderator, uninvitemoderator, acceptmoderatorinvite, removemoderator, addcontributor, removecontributor, editsettings, editflair, distinguish, marknsfw, wikibanned, wikicontributor, wikiunbanned, wikipagelisted, removewikicontributor, wikirevise, wikipermlevel, ignorereports, unignorereports, setpermissions, setsuggestedsort, sticky, unsticky, setcontestmode, unsetcontestmode, lock, unlock, muteuser, unmuteuser, createrule, editrule, deleterule)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get a list of recent moderation actions.", 
                "summary": "Get a list of recent moderation actions.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/leavemoderator": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Abdicate moderator status in a subreddit.", 
                "summary": "Abdicate moderator status in a subreddit.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/unignore_reports": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Allow future reports on a thing to cause notifications.", 
                "summary": "Allow future reports on a thing to cause notifications.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/leavecontributor": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Abdicate approved submitter status in a subreddit.", 
                "summary": "Abdicate approved submitter status in a subreddit.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/distinguish": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (yes, no, admin, special)", 
                        "type": "string", 
                        "name": "how", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Distinguish a thing&#39;s author with a sigil.", 
                "summary": "Distinguish a thing&#39;s author with a sigil.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/unmute_message_author": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "For unmuting user via modmail.", 
                "summary": "For unmuting user via modmail.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "{/r/subreddit}/api/accept_moderator_invite": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Accept an invite to moderate the specified subreddit.", 
                "summary": "Accept an invite to moderate the specified subreddit.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/remove": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "spam", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove a link, comment, or modmail message.", 
                "summary": "Remove a link, comment, or modmail message.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/ignore_reports": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Prevent future reports on a thing from causing notifications.", 
                "summary": "Prevent future reports on a thing from causing notifications.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/mute_message_author": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "For muting user via modmail.", 
                "summary": "For muting user via modmail.", 
                "security": [], 
                "operationId": "moderation"
            }
        }, 
        "/api/multi/multipath/r/srname": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "json data:{  &quot;name&quot;: subreddit name,}", 
                        "type": "string", 
                        "name": "model", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "subreddit name", 
                        "type": "string", 
                        "name": "srname", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Add a subreddit to a multi.", 
                "summary": "Add a subreddit to a multi.", 
                "security": [], 
                "operationId": "multis"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "subreddit name", 
                        "type": "string", 
                        "name": "srname", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get data about a subreddit in a multi.", 
                "summary": "Get data about a subreddit in a multi.", 
                "security": [], 
                "operationId": "multis"
            }, 
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "subreddit name", 
                        "type": "string", 
                        "name": "srname", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove a subreddit from a multi.", 
                "summary": "Remove a subreddit from a multi.", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/multi/rename": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a string no longer than 50 characters", 
                        "type": "string", 
                        "name": "display_name", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "from", 
                        "in": "query"
                    }, 
                    {
                        "description": "destination multireddit url path", 
                        "type": "string", 
                        "name": "to", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Rename a multi.", 
                "summary": "Rename a multi.", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/multi/mine": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "expand_srs", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Fetch a list of multis belonging to the current user.", 
                "summary": "Fetch a list of multis belonging to the current user.", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/multi/user/username": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "expand_srs", 
                        "in": "query"
                    }, 
                    {
                        "description": "A valid, existing reddit username", 
                        "type": "string", 
                        "name": "username", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Fetch a list of public multis belonging to username", 
                "summary": "Fetch a list of public multis belonging to username", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/multi/multipath": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "expand_srs", 
                        "in": "query"
                    }, 
                    {
                        "description": "json data:{  &quot;description_md&quot;: raw markdown text,  &quot;display_name&quot;: a string no longer than 50 characters,  &quot;icon_name&quot;: one of (`art and design`, `ask`, `books`, `business`, `cars`, `comics`, `cute animals`, `diy`, `entertainment`, `food and drink`, `funny`, `games`, `grooming`, `health`, `life advice`, `military`, `models pinup`, `music`, `news`, `philosophy`, `pictures and gifs`, `science`, `shopping`, `sports`, `style`, `tech`, `travel`, `unusual stories`, `video`, ``, `None`),  &quot;key_color&quot;: a 6-digit rgb hex color, e.g. `#AABBCC`,  &quot;subreddits&quot;: [    {      &quot;name&quot;: subreddit name,    },    ...  ],  &quot;visibility&quot;: one of (`private`, `public`, `hidden`),  &quot;weighting_scheme&quot;: one of (`classic`, `fresh`),}", 
                        "type": "string", 
                        "name": "model", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Create or update a multi.", 
                "summary": "Create or update a multi.", 
                "security": [], 
                "operationId": "multis"
            }, 
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "expand_srs", 
                        "in": "query"
                    }, 
                    {
                        "description": "json data:{  &quot;description_md&quot;: raw markdown text,  &quot;display_name&quot;: a string no longer than 50 characters,  &quot;icon_name&quot;: one of (`art and design`, `ask`, `books`, `business`, `cars`, `comics`, `cute animals`, `diy`, `entertainment`, `food and drink`, `funny`, `games`, `grooming`, `health`, `life advice`, `military`, `models pinup`, `music`, `news`, `philosophy`, `pictures and gifs`, `science`, `shopping`, `sports`, `style`, `tech`, `travel`, `unusual stories`, `video`, ``, `None`),  &quot;key_color&quot;: a 6-digit rgb hex color, e.g. `#AABBCC`,  &quot;subreddits&quot;: [    {      &quot;name&quot;: subreddit name,    },    ...  ],  &quot;visibility&quot;: one of (`private`, `public`, `hidden`),  &quot;weighting_scheme&quot;: one of (`classic`, `fresh`),}", 
                        "type": "string", 
                        "name": "model", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Create a multi. Responds with 409 Conflict if it already exists.", 
                "summary": "Create a multi. Responds with 409 Conflict if it already exists.", 
                "security": [], 
                "operationId": "multis"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "expand_srs", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Fetch a multi&#39;s data and subreddit list by name.", 
                "summary": "Fetch a multi&#39;s data and subreddit list by name.", 
                "security": [], 
                "operationId": "multis"
            }, 
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "expand_srs", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Delete a multi.", 
                "summary": "Delete a multi.", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/multi/multipath/description": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "json data:{  &quot;body_md&quot;: raw markdown text,}", 
                        "type": "string", 
                        "name": "model", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Change a multi&#39;s markdown description.", 
                "summary": "Change a multi&#39;s markdown description.", 
                "security": [], 
                "operationId": "multis"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "multipath", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get a multi&#39;s description.", 
                "summary": "Get a multi&#39;s description.", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/multi/copy": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a string no longer than 50 characters", 
                        "type": "string", 
                        "name": "display_name", 
                        "in": "query"
                    }, 
                    {
                        "description": "multireddit url path", 
                        "type": "string", 
                        "name": "from", 
                        "in": "query"
                    }, 
                    {
                        "description": "destination multireddit url path", 
                        "type": "string", 
                        "name": "to", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Copy a multi.", 
                "summary": "Copy a multi.", 
                "security": [], 
                "operationId": "multis"
            }
        }, 
        "/api/block": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "For blocking via inbox.", 
                "summary": "For blocking via inbox.", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/unblock_subreddit": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "fullname of a thing", 
                "summary": "fullname of a thing", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/unread_message": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of thing fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "A comma-separated list of thing fullnames", 
                "summary": "A comma-separated list of thing fullnames", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/read_all_messages": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Queue up marking all messages for a user as read.", 
                "summary": "Queue up marking all messages for a user as read.", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/read_message": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of thing fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "A comma-separated list of thing fullnames", 
                "summary": "A comma-separated list of thing fullnames", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/collapse_message": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of thing fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Collapse a message", 
                "summary": "Collapse a message", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/compose": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the user&#39;s response to the CAPTCHA challenge", 
                        "type": "string", 
                        "name": "captcha", 
                        "in": "query"
                    }, 
                    {
                        "description": "subreddit name", 
                        "type": "string", 
                        "name": "from_sr", 
                        "in": "query"
                    }, 
                    {
                        "description": "the identifier of the CAPTCHA challenge", 
                        "type": "string", 
                        "name": "iden", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 100 characters", 
                        "type": "string", 
                        "name": "subject", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "text", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "to", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Handles message composition under /message/compose.", 
                "summary": "Handles message composition under /message/compose.", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/message/where": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (true, false)", 
                        "type": "string", 
                        "name": "mark", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "mid", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "/api/uncollapse_message": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A comma-separated list of thing fullnames", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Uncollapse a message", 
                "summary": "Uncollapse a message", 
                "security": [], 
                "operationId": "private-messages"
            }
        }, 
        "{/r/subreddit}/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "include_facets", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 512 characters", 
                        "type": "string", 
                        "name": "q", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "restrict_sr", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (relevance, hot, top, new, comments)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (cloudsearch, lucene, plain)", 
                        "type": "string", 
                        "name": "syntax", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (hour, day, week, month, year, all)", 
                        "type": "string", 
                        "name": "t", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) comma-delimited list of result types (sr, link)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Search links page.", 
                "summary": "Search links page.", 
                "security": [], 
                "operationId": "search"
            }
        }, 
        "{/r/subreddit}/rules": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Get the rules for the current subreddit", 
                "summary": "Get the rules for the current subreddit", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/sidebar": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Get the sidebar for the current subreddit", 
                "summary": "Get the sidebar for the current subreddit", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/about/where": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }, 
                    {
                        "description": "A valid, existing reddit username", 
                        "type": "string", 
                        "name": "user", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/delete_sr_header": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove the subreddit&#39;s custom header image.", 
                "summary": "Remove the subreddit&#39;s custom header image.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/api/subscribe": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "one of (sub, unsub)", 
                        "type": "string", 
                        "name": "action", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of a subreddit", 
                        "type": "string", 
                        "name": "sr", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Subscribe to or unsubscribe from a subreddit.", 
                "summary": "Subscribe to or unsubscribe from a subreddit.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/api/subreddits_by_topic": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a string no longer than 50 characters", 
                        "type": "string", 
                        "name": "query", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return a list of subreddits that are relevant to a search query.", 
                "summary": "Return a list of subreddits that are relevant to a search query.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/delete_sr_icon": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove the subreddit&#39;s custom mobile icon.", 
                "summary": "Remove the subreddit&#39;s custom mobile icon.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/subreddits/mine/where": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get subreddits the user has a relationship with.", 
                "summary": "Get subreddits the user has a relationship with.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/api/recommend/sr/srnames": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "comma-delimited list of subreddit names", 
                        "type": "string", 
                        "name": "omit", 
                        "in": "query"
                    }, 
                    {
                        "description": "comma-delimited list of subreddit names", 
                        "type": "string", 
                        "name": "srnames", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return subreddits recommended for the given subreddit(s).", 
                "summary": "Return subreddits recommended for the given subreddit(s).", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/delete_sr_img": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid subreddit image name", 
                        "type": "string", 
                        "name": "img_name", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove an image from the subreddit&#39;s custom image set.", 
                "summary": "Remove an image from the subreddit&#39;s custom image set.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/r/subreddit/about": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Return information about the subreddit.", 
                "summary": "Return information about the subreddit.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/subreddit_stylesheet": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (save, preview)", 
                        "type": "string", 
                        "name": "op", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string up to 256 characters long, consisting of printable characters.", 
                        "type": "string", 
                        "name": "reason", 
                        "in": "query"
                    }, 
                    {
                        "description": "the new stylesheet content", 
                        "type": "string", 
                        "name": "stylesheet_contents", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Update a subreddit&#39;s stylesheet.", 
                "summary": "Update a subreddit&#39;s stylesheet.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/api/search_reddit_names": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "exact", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "include_over_18", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string up to 50 characters long, consisting of printable characters.", 
                        "type": "string", 
                        "name": "query", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "List subreddit names that begin with a query string.", 
                "summary": "List subreddit names that begin with a query string.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/subreddits/where": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get all subreddits.", 
                "summary": "Get all subreddits.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/subreddits/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "a search query", 
                        "type": "string", 
                        "name": "q", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) the string all", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (relevance, activity)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Search subreddits by title and description.", 
                "summary": "Search subreddits by title and description.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/delete_sr_banner": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove the subreddit&#39;s custom mobile banner.", 
                "summary": "Remove the subreddit&#39;s custom mobile banner.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/upload_sr_img": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "file upload with maximum size of 500 KiB", 
                        "type": "string", 
                        "name": "file", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) can be ignored", 
                        "type": "string", 
                        "name": "formid", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer between 0 and 1", 
                        "type": "string", 
                        "name": "header", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of png or jpg (default: png)", 
                        "type": "string", 
                        "name": "img_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid subreddit image name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (img, header, icon, banner)", 
                        "type": "string", 
                        "name": "upload_type", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Add or replace a subreddit image, custom header logo, custom mobilenicon, or custom mobile banner.", 
                "summary": "Add or replace a subreddit image, custom header logo, custom mobilenicon, or custom mobile banner.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/r/subreddit/about/edit": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "one of (true, false)", 
                        "type": "string", 
                        "name": "created", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "location", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get the current settings of a subreddit.", 
                "summary": "Get the current settings of a subreddit.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/sticky": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "an integer between 1 and 2 (default: 1)", 
                        "type": "string", 
                        "name": "num", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Redirect to one of the posts stickied in the current subreddit", 
                "summary": "Redirect to one of the posts stickied in the current subreddit", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "{/r/subreddit}/api/submit_text": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "tags": [
                    ""
                ], 
                "description": "Get the submission text for the subreddit.", 
                "summary": "Get the submission text for the subreddit.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/api/site_admin": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "allow_top", 
                        "in": "query"
                    }, 
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the user&#39;s response to the CAPTCHA challenge", 
                        "type": "string", 
                        "name": "captcha", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "collapse_deleted_comments", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer between 0 and 1440 (default: 0)", 
                        "type": "string", 
                        "name": "comment_score_hide_mins", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "description", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "exclude_banned_modqueue", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 500 characters", 
                        "type": "string", 
                        "name": "header-title", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "hide_ads", 
                        "in": "query"
                    }, 
                    {
                        "description": "the identifier of the CAPTCHA challenge", 
                        "type": "string", 
                        "name": "iden", 
                        "in": "query"
                    }, 
                    {
                        "description": "a valid IETF language tag (underscore separated)", 
                        "type": "string", 
                        "name": "lang", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (any, link, self)", 
                        "type": "string", 
                        "name": "link_type", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "modmail_email_address", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "modmail_email_enabled", 
                        "in": "query"
                    }, 
                    {
                        "description": "subreddit name", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "over_18", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "public_description", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "public_traffic", 
                        "in": "query"
                    }, 
                    {
                        "description": "boolean value", 
                        "type": "string", 
                        "name": "show_media", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (low, high, all)", 
                        "type": "string", 
                        "name": "spam_comments", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (low, high, all)", 
                        "type": "string", 
                        "name": "spam_links", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (low, high, all)", 
                        "type": "string", 
                        "name": "spam_selfposts", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "sr", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 60 characters", 
                        "type": "string", 
                        "name": "submit_link_label", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "submit_text", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 60 characters", 
                        "type": "string", 
                        "name": "submit_text_label", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (confidence, top, new, hot, controversial, old, random, qa)", 
                        "type": "string", 
                        "name": "suggested_comment_sort", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 100 characters", 
                        "type": "string", 
                        "name": "title", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (gold_restricted, archived, restricted, gold_only, employees_only, private, public)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (disabled, modonly, anyone)", 
                        "type": "string", 
                        "name": "wikimode", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer greater than 0 (default: 0)", 
                        "type": "string", 
                        "name": "wiki_edit_age", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer greater than 0 (default: 0)", 
                        "type": "string", 
                        "name": "wiki_edit_karma", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Create or configure a subreddit.", 
                "summary": "Create or configure a subreddit.", 
                "security": [], 
                "operationId": "subreddits"
            }
        }, 
        "/api/v1/me/friends/username": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "{  &quot;name&quot;: A valid, existing reddit username,  &quot;note&quot;: a string no longer than 300 characters,}", 
                        "type": "string", 
                        "name": "This endpoint expects JSON data of this format", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Create or update a &quot;friend&quot; relationship.", 
                "summary": "Create or update a &quot;friend&quot; relationship.", 
                "security": [], 
                "operationId": "users"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A valid, existing reddit username", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get information about a specific &#39;friend&#39;, such as notes.", 
                "summary": "Get information about a specific &#39;friend&#39;, such as notes.", 
                "security": [], 
                "operationId": "users"
            }, 
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A valid, existing reddit username", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Stop being friends with a user.", 
                "summary": "Stop being friends with a user.", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "/api/v1/me/notifications": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "an integer between 0 and 1000 (default: 30)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "end_date", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (new, old, None)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "start_date", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Get my notifications.", 
                "summary": "Get my notifications.", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "{/r/subreddit}/api/setpermissions": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "permissions", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "the string json", 
                "summary": "the string json", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "/api/v1/me/notifications/id": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "{  &quot;read&quot;: boolean value,}", 
                        "type": "string", 
                        "name": "This endpoint expects JSON data of this format", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "", 
                "summary": "", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "/user/username/where": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "after", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "before", 
                        "in": "query"
                    }, 
                    {
                        "description": "a positive integer (default: 0)", 
                        "type": "string", 
                        "name": "count", 
                        "in": "query"
                    }, 
                    {
                        "description": "the maximum number of items desired (default: 25, maximum: 100)", 
                        "type": "string", 
                        "name": "limit", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (given)", 
                        "type": "string", 
                        "name": "show", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (hot, new, top, controversial)", 
                        "type": "string", 
                        "name": "sort", 
                        "in": "query"
                    }, 
                    {
                        "description": "(optional) expand subreddits", 
                        "type": "string", 
                        "name": "sr_detail", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (hour, day, week, month, year, all)", 
                        "type": "string", 
                        "name": "t", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "username", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "This endpoint is a listing.", 
                "summary": "This endpoint is a listing.", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "{/r/subreddit}/api/friend": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the string json", 
                        "type": "string", 
                        "name": "api_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "raw markdown text", 
                        "type": "string", 
                        "name": "ban_message", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 100 characters", 
                        "type": "string", 
                        "name": "ban_reason", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "container", 
                        "in": "query"
                    }, 
                    {
                        "description": "an integer between 1 and 999", 
                        "type": "string", 
                        "name": "duration", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "a string no longer than 300 characters", 
                        "type": "string", 
                        "name": "note", 
                        "in": "query"
                    }, 
                    {
                        "type": "string", 
                        "name": "permissions", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (friend, moderator, moderator_invite, contributor, banned, muted, wikibanned, wikicontributor)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Create a relationship between a user and another user or subreddit", 
                "summary": "Create a relationship between a user and another user or subreddit", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "/api/v1/user/username/trophies": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "A valid, existing reddit username", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return a list of trophies for the a given user.", 
                "summary": "Return a list of trophies for the a given user.", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "/user/username/about": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "username", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Return information about the user, including karma and gold status.", 
                "summary": "Return information about the user, including karma and gold status.", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "{/r/subreddit}/api/unfriend": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "type": "string", 
                        "name": "container", 
                        "in": "query"
                    }, 
                    {
                        "description": "fullname of a thing", 
                        "type": "string", 
                        "name": "id", 
                        "in": "query"
                    }, 
                    {
                        "description": "the name of an existing user", 
                        "type": "string", 
                        "name": "name", 
                        "in": "query"
                    }, 
                    {
                        "description": "one of (friend, enemy, moderator, moderator_invite, contributor, banned, muted, wikibanned, wikicontributor)", 
                        "type": "string", 
                        "name": "type", 
                        "in": "query"
                    }, 
                    {
                        "description": "a modhash", 
                        "type": "string", 
                        "name": "uh / X-Modhash header", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Remove a relationship between a user and another user or subreddit", 
                "summary": "Remove a relationship between a user and another user or subreddit", 
                "security": [], 
                "operationId": "users"
            }
        }, 
        "/api/username_available": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }, 
                "parameters": [
                    {
                        "description": "a valid, unused, username", 
                        "type": "string", 
                        "name": "user", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    ""
                ], 
                "description": "Check whether a username is available for registration.", 
                "summary": "Check whether a username is available for registration.", 
                "security": [], 
                "operationId": "users"
            }
        }
    }
}